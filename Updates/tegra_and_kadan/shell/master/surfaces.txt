//---------------------------Surfaces.txt--------------------------
//tegra and kadan mirrorverse
version,1


//Z hierarchy bottom to top
//Base 0-49
//Tail (interpolation drops it below the base) 0-49
//Head dressups (no interpolation option for binds?) 50-99
//Neck and body dressups 100-149
//Mouth 150-199
//Eyes 200-249
//Brows/Ears 250-299
//Earrings dressups 300-349
//Face dressups such as glasses or masks 350-399
//Arms 400-449
//(can use interpolate on upstage arm if need be, but arms will usually be in front of what they're interacting with and excess erased around base).
//Purposefully oversized ranges so z ranges are more forgiving for future.
//TODO rename png files to align with intervals where possible.

//--The Main Character's Poses (Tegra)---------------------------------------------------------

surface0 //Tegra base image and intervals associated
{
collision0,166,114,189,136,Ear
collision1,119,108,161,141,Face

//Dressups
//Headband - Stars
animation50.interval,bind
animation50.pattern0,add,50,0,0,0

//Necklace - Purple
animation100.interval,bind
animation100.pattern0,add,100,0,0,0

//--Defaults (Tegra)----------------------------------------------------------------------------------------
//Base element def
element0,overlay,surface0.png,0,0

//Ears default (neutral)
animation250.interval,runonce
animation250.pattern0,overlay,250,0,0,0

//Arms default (neutral)
animation400.interval,runonce
animation400.pattern0,overlay,400,0,0,0

animation401.interval,runonce
animation401.pattern0,overlay,401,0,0,0

//Mouth default (neutral closed)
animation150.interval,runonce
animation150.pattern0,overlay,150,0,0,0

//--Blinking Default---------------------------------------------------------------------------
animation0.interval,random,4
animation0.pattern0,overlay,-1,100,0,0
animation0.pattern1,overlay,201,50,0,0
animation0.pattern2,overlay,216,100,0,0
animation0.pattern3,overlay,-1,30,0,0

//--Talking-----------------------------------------------------------------------------
animation1.interval,talk,4
animation1.pattern0,alternativestart,(2,3,4,5)

animation2.interval,never
animation2.pattern0,stop,150
animation2.pattern1,overlay,151,100,0,0
animation2.pattern2,overlay,159,80,0,0
animation2.pattern3,overlay,150,130,0,0
animation2.pattern4,overlay,-1,100,0,0
animation2.pattern5,start,150

animation3.interval,never
animation3.pattern0,stop,150
animation3.pattern1,overlay,159,100,0,0
animation3.pattern2,overlay,-1,100,0,0
animation3.pattern3,start,150

animation4.interval,never
animation4.pattern0,stop,150
animation4.pattern1,overlay,151,100,0,0
animation4.pattern2,overlay,-1,100,0,0
animation4.pattern3,start,150

animation5.interval,never
animation5.pattern0,stop,150
animation5.pattern1,overlay,151,100,0,0
animation5.pattern2,overlay,160,80,0,0
animation5.pattern3,overlay,159,100,0,0
animation5.pattern4,overlay,150,150,0,0
animation5.pattern5,overlay,159,100,0,0
animation5.pattern6,overlay,-1,100,0,0
animation5.pattern7,start,150

//--Blocks for interval stacking (Tegra)-----------------------------------------------------------------------
//--T. Mouths count: (150,151,152,153,154,155,156,157,158,159,160,161,162)------------------------------------------

//Small open
animation151.interval,never
animation151.pattern0,parallelstop,(150,152,153,154,155,156,157,158,159,160,161,162)
animation151.pattern1,overlay,151,0,0,0

//Squiggle
animation152.interval,never
animation152.pattern0,parallelstop,(150,151,153,154,155,156,157,158,159,160,161,162)
animation152.pattern1,overlay,152,0,0,0

//Snarl
animation153.interval,never
animation153.pattern0,parallelstop,(150,151,152,154,155,156,157,158,159,160,161,162)
animation153.pattern1,overlay,153,0,0,0

//Big open
animation154.interval,never
animation154.pattern0,parallelstop,(150,151,152,153,155,156,157,158,159,160,161,162)
animation154.pattern1,overlay,154,0,0,0

//Duckface
animation155.interval,never
animation155.pattern0,parallelstop,(150,151,152,153,154,156,157,158,159,160,161,162)
animation155.pattern1,overlay,155,0,0,0

//Slantfrown
animation156.interval,never
animation156.pattern0,parallelstop,(150,151,152,153,154,155,157,158,159,160,161,162)
animation156.pattern1,overlay,156,0,0,0

//Bracketgrin
animation157.interval,never
animation157.pattern0,parallelstop,(150,151,152,153,154,155,156,158,159,160,161,162)
animation157.pattern1,overlay,157,0,0,0

//Smallgrin
animation158.interval,never
animation158.pattern0,parallelstop,(150,151,152,153,154,155,156,157,159,160,161,162)
animation158.pattern1,overlay,158,0,0,0

//Half open
animation159.interval,never
animation159.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,160,161,162)
animation159.pattern1,overlay,159,0,0,0

//Big open smile
animation160.interval,never
animation160.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,161,162)
animation160.pattern1,overlay,160,0,0,0

//Puff cheek
animation161.interval,never
animation161.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,160,162)
animation161.pattern1,overlay,161,0,0,0

//Open snarl
animation162.interval,never
animation162.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,160,161)
animation162.pattern1,overlay,162,0,0,0

//--T. Eyes count: (0,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221)--------------------------------

//Closed normal
animation201.interval,never
animation201.pattern0,parallelstop,(0,202,203,204,206,208,210,212,214,216,218,220)
animation201.pattern1,overlay,201,0,0,0

//Shocked
animation202.interval,never
animation202.pattern0,parallelstop,(0,201,203,204,206,208,210,212,214,216,218,220)
animation202.pattern1,overlay,202,0,0,0

//Closed smize
animation203.interval,never
animation203.pattern0,parallelstop,(0,201,202,204,206,208,210,212,214,216,218,220)
animation203.pattern1,overlay,203,0,0,0

//Control animation for Look at USER
animation204.interval,never
animation204.pattern0,parallelstop,(0,201,202,203,206,207,208,210,212,214,216,218,220)
animation204.pattern1,alternativestart,(205)

	//Look at USER
	animation205.interval,never
	animation205.pattern0,overlay,205,0,0,0
	animation205.pattern1,overlay,215,400-4000,0,0
	animation205.pattern2,overlay,201,50,0,0
	animation205.pattern3,overlay,215,50,0,0
	animation205.pattern4,start,204

//Control animation for Glare
animation206.interval,never
animation206.pattern0,parallelstop,(0,201,202,203,204,208,210,212,214,216,218,220)
animation206.pattern1,alternativestart,(207)

	//Glare
	animation207.interval,never
	animation207.pattern0,overlay,207,0,0,0
	animation207.pattern1,overlay,201,400-4000,0,0
	animation207.pattern2,overlay,207,50,0,0
	animation207.pattern3,start,206

//Glare at USER
animation208.interval,never
animation208.pattern0,parallelstop,(0,201,202,203,204,206,210,212,214,216,218,220)
animation208.pattern1,alternativestart,(209)

	//Glare at USER
	animation209.interval,never
	animation209.pattern0,overlay,209,0,0,0
	animation209.pattern1,overlay,201,400-4000,0,0
	animation209.pattern2,overlay,209,50,0,0
	animation209.pattern3,start,208

//Control animation for Glance Right
animation210.interval,never
animation210.pattern0,parallelstop,(0,201,202,203,204,206,208,212,214,216,218,220)
animation210.pattern1,alternativestart,(211)

	//Glance right
	animation211.interval,never
	animation211.pattern0,overlay,211,0,0,0
	animation211.pattern1,overlay,221,400-4000,0,0
	animation211.pattern2,overlay,201,50,0,0
	animation211.pattern3,overlay,211,50,0,0
	animation211.pattern4,start,210

//Control animation for Crosseyed
animation212.interval,never
animation212.pattern0,parallelstop,(0,201,202,203,204,206,208,210,214,216,218,220)
animation212.pattern1,alternativestart,(213)

	//Crosseyed
	animation213.interval,never
	animation213.pattern0,overlay,213,0,0,0
	animation213.pattern1,overlay,219,400-4000,0,0
	animation213.pattern2,overlay,201,50,0,0
	animation213.pattern3,overlay,213,50,0,0
	animation213.pattern4,start,212


//Half-closed USER
animation214.interval,never
animation214.pattern0,parallelstop,(0,201,202,203,204,206,208,210,212,216,218,220)
animation214.pattern1,alternativestart,(215)

	//Half-closed USER
	animation215.interval,never
	animation215.pattern0,overlay,215,0,0,0
	animation215.pattern2,overlay,201,400-4000,0,0
	animation215.pattern3,overlay,215,50,0,0
	animation215.pattern4,start,212

//Half-closed normal
animation216.interval,never
animation216.pattern0,parallelstop,(0,201,202,203,204,206,208,210,212,214,218,220)
animation216.pattern1,alternativestart,(217)

	//Half-closed normal
	animation217.interval,never
	animation217.pattern0,overlay,216,0,0,0
	animation217.pattern2,overlay,201,400-4000,0,0
	animation217.pattern3,overlay,216,50,0,0
	animation217.pattern4,start,216

//Half-closed crosseye
animation218.interval,never
animation218.pattern0,parallelstop,(0,201,202,203,204,206,208,210,212,214,216,220)
animation218.pattern1,alternativestart,(219)

	//Half-closed crosseye
	animation219.interval,never
	animation219.pattern0,overlay,219,0,0,0
	animation219.pattern2,overlay,201,400-4000,0,0
	animation219.pattern3,overlay,219,50,0,0
	animation219.pattern4,start,218

//Half-closed glance right
animation220.interval,never
animation220.pattern0,parallelstop,(0,201,202,203,204,206,208,210,212,214,216,218)
animation220.pattern1,alternativestart,(221)

	//Half-closed glance right
	animation221.interval,never
	animation221.pattern0,overlay,221,0,0,0
	animation221.pattern2,overlay,201,400-4000,0,0
	animation221.pattern3,overlay,221,50,0,0
	animation221.pattern4,start,220



//--Brows/Ears--count: (250,251,252,253,254,255,260)--------------------------------------------------------
//Ears pinned 
animation251.interval,never
animation251.pattern0,parallelstop,(250,252,253,254,255,260) 
animation251.pattern1,overlay,251,0,0,0

//Ears perked
animation252.interval,never
animation252.pattern0,parallelstop,(250,251,253,254,255,260) 
animation252.pattern1,overlay,252,0,0,0

//Ears down
animation253.interval,never
animation253.pattern0,parallelstop,(250,251,252,254,255,260) 
animation253.pattern1,overlay,253,0,0,0

//Ears quirked
animation254.interval,never
animation254.pattern0,parallelstop,(250,251,252,253,255,260)
animation254.pattern1,overlay,254,0,0,0

//Idle ear twitch
animation255.interval,random,150
animation255.pattern0,parallelstop,(250,251,252,253,254,260)
animation255.pattern1,alternativestart,(256,257,258)

animation256.interval,never
animation256.pattern0,overlay,256,0,0,0 
animation256.pattern1,overlay,-1,100,0,0
animation256.pattern2,start,250

animation257.interval,never
animation257.pattern0,overlay,257,0,0,0 
animation257.pattern1,overlay,-1,100,0,0
animation257.pattern2,start,250

animation258.interval,never
animation258.pattern0,overlay,258,0,0,0 
animation258.pattern1,overlay,-1,100,0,0
animation258.pattern2,start,250

//Ears neutral (non-default)
animation259.interval,never
animation259.pattern0,parallelstop,(250,251,252,253,254,255,260)
animation259.pattern1,overlay,250,0,0,0

//Ears reverse quirked
animation260.interval,never
animation260.pattern0,parallelstop,(250,251,252,253,254,255,259)
animation260.pattern1,overlay,260,0,0,0


//--Arms (back (even)/ front (odd) alternating)--Count: (400,401,402,403,404,405,406,407,408,409,410-------------------------------------
//Back arm neutral
animation402.interval,never
animation402.pattern0,parallelstop,(400,404,406,408,410)
animation402.pattern1,overlay,400,0,0,0

//Front arm neutral
animation403.interval,never
animation403.pattern0,parallelstop,(401,405,407,409)
animation403.pattern1,overlay,401,0,0,0

//Back arm behind
animation404.interval,never
animation404.pattern0,parallelstop,(400,402,406,408,410)
animation404.pattern1,overlay,404,0,0,0

//Front arm behind
animation405.interval,never
animation405.pattern0,parallelstop,(401,403,407,409)
animation405.pattern1,overlay,405,0,0,0

//Back arm up fist
animation406.interval,never
animation406.pattern0,parallelstop,(400,402,404,408,410)
animation406.pattern1,overlay,406,0,0,0

//Front arm up fist
animation407.interval,never
animation407.pattern0,parallelstop,(401,403,405,409)
animation407.pattern1,overlay,407,0,0,0

//Back arm half raised
animation408.interval,never
animation408.pattern0,parallelstop,(400,402,404,406,410)
animation408.pattern1,overlay,408,0,0,0

//Front arm half raised
animation409.interval,never
animation409.pattern0,parallelstop,(401,403,405,407)
animation409.pattern1,overlay,409,0,0,0

//Back arm finger-chin
animation410.interval,never
animation410.pattern0,parallelstop,(400,402,404,406,408)
animation410.pattern1,overlay,410,0,0,0

//*********************Advanced User Info*******************************
//These text boxes are meant for those who have an interest in expanding or using more complicated functions in their ghost. Also for my own reference in the future since I plan on using this template too, haha. If you have no interest in any of this and just want to keep things as simple as possible, feel free to skip these boxes.

//A note about element - you can have multiple elements! You can layer them on top of each other if you want, and they'll be there permanently in the pose. So for example, you could do something like this

//element0,overlay,surface0.png,0,0
//element1,overlay,surface9.png,0,0

//Where surface0 could be the body, and surface9 could be the head. I don't normally use this very often, but if you want to have something always on your ghost and don't want to use an always interval, this may be the way to do it. It could work for things like having a body that doesn't change and a head that changes expressions, for example.

//An element also doesn't need to be the first frame of an animation, it can also be the last one. This can come in handy for certain animations that only run once.
//***********************************************************************




}
//--End of surface0-------------------------------------------------------------------------

//Tegra SLEEP testing TODO rename png files to match intervals where possible
surface1 
{
collision0,166,114,189,136,Ear
collision1,119,108,161,141,Face

//Dressups
//Headband - Stars
animation50.interval,bind
animation50.pattern0,add,50,0,0,0

//Necklace - Purple
animation100.interval,bind
animation100.pattern0,add,100,0,0,0


//--Defaults (Tegra) SLEEP----------------------------------------------------------------------------------------
//Base element def
element0,overlay,surface1.png,0,0

//Ears default (neutral)
animation250.interval,runonce
animation250.pattern0,overlay,250,0,0,0

//Arms default (neutral)
animation400.interval,runonce
animation400.pattern0,overlay,400,0,0,0

animation401.interval,runonce
animation401.pattern0,overlay,401,0,0,0

//Mouth default (neutral closed)
animation150.interval,runonce
animation150.pattern0,overlay,150,0,0,0

//--Eyes Default
animation0.interval,runonce
animation0.pattern0,overlay,201,0,0,0

//--Talking SLEEP-----------------------------------------------------------------------------
animation1.interval,talk,4
animation1.pattern0,alternativestart,(2,3,4,5)

animation2.interval,never
animation2.pattern0,stop,150
animation2.pattern1,overlay,151,100,0,0
animation2.pattern2,overlay,159,80,0,0
animation2.pattern3,overlay,150,130,0,0
animation2.pattern4,overlay,-1,100,0,0
animation2.pattern5,start,150

animation3.interval,never
animation3.pattern0,stop,150
animation3.pattern1,overlay,159,100,0,0
animation3.pattern2,overlay,-1,100,0,0
animation3.pattern3,start,150

animation4.interval,never
animation4.pattern0,stop,150
animation4.pattern1,overlay,151,100,0,0
animation4.pattern2,overlay,-1,100,0,0
animation4.pattern3,start,150

animation5.interval,never
animation5.pattern0,stop,150
animation5.pattern1,overlay,151,100,0,0
animation5.pattern2,overlay,160,80,0,0
animation5.pattern3,overlay,159,100,0,0
animation5.pattern4,overlay,150,150,0,0
animation5.pattern5,overlay,159,100,0,0
animation5.pattern6,overlay,-1,100,0,0
animation5.pattern7,start,150

//--Blocks for interval stacking (Tegra SLEEP)-----------------------------------------------------------------------
//--T. Mouths count: (150,151,152,153,154,155,156,157,158,159,160)------------------------------------------

//Small open
animation151.interval,never
animation151.pattern0,parallelstop,(150,152,153,154,155,156,157,158,159,160,161,162)
animation151.pattern1,overlay,151,0,0,0

//Squiggle
animation152.interval,never
animation152.pattern0,parallelstop,(150,151,153,154,155,156,157,158,159,160,161,162)
animation152.pattern1,overlay,152,0,0,0

//Snarl
animation153.interval,never
animation153.pattern0,parallelstop,(150,151,152,154,155,156,157,158,159,160,161,162)
animation153.pattern1,overlay,153,0,0,0

//Big open
animation154.interval,never
animation154.pattern0,parallelstop,(150,151,152,153,155,156,157,158,159,160,161,162)
animation154.pattern1,overlay,154,0,0,0

//Duckface
animation155.interval,never
animation155.pattern0,parallelstop,(150,151,152,153,154,156,157,158,159,160,161,162)
animation155.pattern1,overlay,155,0,0,0

//Slantfrown
animation156.interval,never
animation156.pattern0,parallelstop,(150,151,152,153,154,155,157,158,159,160,161,162)
animation156.pattern1,overlay,156,0,0,0

//Bracketgrin
animation157.interval,never
animation157.pattern0,parallelstop,(150,151,152,153,154,155,156,158,159,160,161,162)
animation157.pattern1,overlay,157,0,0,0

//Smallgrin
animation158.interval,never
animation158.pattern0,parallelstop,(150,151,152,153,154,155,156,157,159,160,161,162)
animation158.pattern1,overlay,158,0,0,0

//Half open
animation159.interval,never
animation159.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,160,161,162)
animation159.pattern1,overlay,159,0,0,0

//Big open smile
animation160.interval,never
animation160.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,161,162)
animation160.pattern1,overlay,160,0,0,0

//Puff cheek
animation161.interval,never
animation161.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,160,162)
animation161.pattern1,overlay,161,0,0,0

//Open snarl
animation162.interval,never
animation162.pattern0,parallelstop,(150,151,152,153,154,155,156,157,158,159,160,161)
animation162.pattern1,overlay,162,0,0,0

//--T. Eyes SLEEP count: (0,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221)--------------------------------

//Closed normal
animation201.interval,never
animation201.pattern0,parallelstop,(0,202,203)
animation201.pattern1,overlay,201,0,0,0

//Shocked
animation202.interval,never
animation202.pattern0,parallelstop,(0,201,203)
animation202.pattern1,overlay,202,0,0,0

//Closed smize
animation203.interval,never
animation203.pattern0,parallelstop,(0,201,202)
animation203.pattern1,overlay,203,0,0,0

//--Brows/Ears SLEEP--count: (250,251,252,253,254,255)--------------------------------------------------------
//Ears pinned 
animation251.interval,never
animation251.pattern0,parallelstop,(250,252,253,254,255,260) 
animation251.pattern1,overlay,251,0,0,0

//Ears perked
animation252.interval,never
animation252.pattern0,parallelstop,(250,251,253,254,255,260) 
animation252.pattern1,overlay,252,0,0,0

//Ears down
animation253.interval,never
animation253.pattern0,parallelstop,(250,251,252,254,255,260) 
animation253.pattern1,overlay,253,0,0,0

//Ears quirked
animation254.interval,never
animation254.pattern0,parallelstop,(250,251,252,253,255,260)
animation254.pattern1,overlay,254,0,0,0

//Idle ear twitch
animation255.interval,random,150
animation255.pattern0,parallelstop,(250,251,252,253,254,260)
animation255.pattern1,alternativestart,(256,257,258)

animation256.interval,never
animation256.pattern0,overlay,256,0,0,0 
animation256.pattern1,overlay,-1,100,0,0
animation256.pattern2,start,250

animation257.interval,never
animation257.pattern0,overlay,257,0,0,0 
animation257.pattern1,overlay,-1,100,0,0
animation257.pattern2,start,250

animation258.interval,never
animation258.pattern0,overlay,258,0,0,0 
animation258.pattern1,overlay,-1,100,0,0
animation258.pattern2,start,250

//Ears neutral (non-default)
animation259.interval,never
animation259.pattern0,parallelstop,(250,251,252,253,254,255,260)
animation259.pattern1,overlay,250,0,0,0

//Ears reverse quirked
animation260.interval,never
animation260.pattern0,parallelstop,(250,251,252,253,254,255,259)
animation260.pattern1,overlay,260,0,0,0


//--Arms SLEEP (back (even)/ front (odd) alternating)--Count: (400,401,402,403,404,405,406,407,408,409,410-------------------------------------
//Back arm neutral
animation402.interval,never
animation402.pattern0,parallelstop,(400,404,406,408,410)
animation402.pattern1,overlay,400,0,0,0

//Front arm neutral
animation403.interval,never
animation403.pattern0,parallelstop,(401,405,407,409)
animation403.pattern1,overlay,401,0,0,0

//Back arm behind
animation404.interval,never
animation404.pattern0,parallelstop,(400,402,406,408,410)
animation404.pattern1,overlay,404,0,0,0

//Front arm behind
animation405.interval,never
animation405.pattern0,parallelstop,(401,403,407,409)
animation405.pattern1,overlay,405,0,0,0

//Back arm up fist
animation406.interval,never
animation406.pattern0,parallelstop,(400,402,404,408,410)
animation406.pattern1,overlay,406,0,0,0

//Front arm up fist
animation407.interval,never
animation407.pattern0,parallelstop,(401,403,405,409)
animation407.pattern1,overlay,407,0,0,0

//Back arm half raised
animation408.interval,never
animation408.pattern0,parallelstop,(400,402,404,406,410)
animation408.pattern1,overlay,408,0,0,0

//Front arm half raised
animation409.interval,never
animation409.pattern0,parallelstop,(401,403,405,407)
animation409.pattern1,overlay,409,0,0,0

//Back arm finger-chin
animation410.interval,never
animation410.pattern0,parallelstop,(400,402,404,406,408)
animation410.pattern1,overlay,410,0,0,0
}
//end of surface1


//--The Side Character's poses (Kadan)-------------------------------------------------------

//--Kadan's base and associated intervals
surface10
{
collision0,86,66,115,101,Face
collision1,59,38,82,87,Head

//Dressups
//Glasses
animation350.interval,bind
animation350.pattern0,add,9350,0,0,0

//Hairpin
animation50.interval,bind
animation50.pattern0,add,950,0,0,0

//Kadan base element
element0,overlay,surface10.png,0,0

//Defaults (Kadan)-----------------------------------------------------------

//Brows default
animation250.interval,runonce
animation250.pattern0,overlay,2200,0,0,0

//Back arm default
animation400.interval,runonce
animation400.pattern0,overlay,2300,0,0,0

//Front arm default
animation401.interval,runonce
animation401.pattern0,overlay,2300,0,0,0

//Mouth default
animation150.interval,runonce
animation150.pattern0,overlay,2100,0,0,0

//Tail default
animation12.interval,runonce
animation12.pattern0,interpolate,2400,0,0,0

//--K. Tail and other animated defaults (10,11)---------------------------------------------------------

//Control animation for Kadan's tail
animation10.interval,random,2000
animation10.pattern0,parallelstop,(12)
animation10.pattern1,alternativestart,(11)

	//tail neutral wag
	animation11.interval,never
	animation11.pattern0,interpolate,2400,0,0,0
	animation11.pattern1,interpolate,2401,200,0,0
	animation11.pattern2,interpolate,2402,200,0,0
	animation11.pattern3,interpolate,2403,200,0,0
	animation11.pattern4,interpolate,2400,200,0,0
	animation11.pattern5,interpolate,2400,200,0,0
	animation11.pattern6,start,10

//Blinking
animation0.interval,random,4
animation0.pattern0,overlay,-1,100,0,0
animation0.pattern1,overlay,2002,50,0,0
animation0.pattern2,overlay,2001,100,0,0
animation0.pattern3,overlay,-1,30,0,0

//Talking (Kadan)----------------------------------------------------------------------------
animation1.interval,talk,4
animation1.pattern0,alternativestart,(2,3,4)

animation2.interval,never
animation2.pattern0,stop,150
animation2.pattern1,overlay,2100,100,0,0
animation2.pattern2,overlay,2101,130,0,0
animation2.pattern3,overlay,2102,80,0,0
animation2.pattern4,overlay,-1,100,0,0
animation2.pattern5,start,150

animation3.interval,never
animation3.pattern0,stop,150
animation3.pattern1,overlay,2101,140,0,0
animation3.pattern2,overlay,-1,100,0,0
animation3.pattern3,start,150

animation4.interval,never
animation4.pattern0,stop,150
animation4.pattern1,overlay,2102,140,0,0
animation4.pattern2,overlay,-1,100,0,0
animation4.pattern3,start,150

//--Interval stack blocks (Kadan)--------------------------------------------

//K. Arms count: 400,401,402,404,406,408
//Arms at sides
animation402.interval,never
animation402.pattern0,parallelstop,(400,401,404,406,408)
animation402.pattern1,overlay,2301,0,0,0

//Arms crossed
animation404.interval,never
animation404.pattern0,parallelstop,(400,401,402,406,408)
animation404.pattern1,overlay,2302,0,0,0

//Arms up and akimbo
animation406.interval,never
animation406.pattern0,parallelstop,(400,401,402,404,408)
animation406.pattern1,overlay,2303,0,0,0

//Arms self grasp
animation408.interval,never
animation408.pattern0,parallelstop,(400,401,402,404,406)
animation408.pattern1,overlay,2304,0,0,0

//--K. Mouths count: 150,151,152,153,154,155,156---------------------------------------------------
//Talk open
animation151.interval,never
animation151.pattern0,parallelstop,(150,152,153,154,155,156)
animation151.pattern1,overlay,2101,0,0,0

//Squiggle
animation152.interval,never
animation152.pattern0,parallelstop,(150,151,153,154,155,156)
animation152.pattern1,overlay,2103,0,0,0

//Small open
animation153.interval,never
animation153.pattern0,parallelstop,(150,151,152,154,155,156)
animation153.pattern1,overlay,2102,0,0,0

//Smile
animation154.interval,never
animation154.pattern0,parallelstop,(150,151,152,153,155,156)
animation154.pattern1,overlay,2104,0,0,0

//Half frown
animation155.interval,never
animation155.pattern0,parallelstop,(150,151,152,153,154,156)
animation155.pattern1,overlay,2105,0,0,0

//Hmmmm
animation156.interval,never
animation156.pattern0,parallelstop,(150,151,152,153,154,155)
animation156.pattern1,overlay,2106,0,0,0

//--K. Eyes count: 0,201,202,203,204,206,208,210----------------------------------------------------------

//Closed normal
animation201.interval,never
animation201.pattern0,parallelstop,(0,202,204,206,208,210)
animation201.pattern1,overlay,2002,0,0,0

//Shocked
animation202.interval,never
animation202.pattern0,parallelstop,(0,201,204,206,208,210)
animation202.pattern1,overlay,2005,0,0,0

//Smize closed
//animation203.interval,never

//Control animation for Look at USER
animation204.interval,never
animation204.pattern0,parallelstop,(0,201,202,206,208,210)
animation204.pattern1,alternativestart,(205)

	animation205.interval,never
	animation205.pattern0,overlay,2004,0,0,0
	animation205.pattern1,overlay,2002,400-2000,0,0
	animation205.pattern2,overlay,2004,50,0,0
	animation205.pattern3,start,204

//Control animation for Glare
animation206.interval,never
animation206.pattern0,parallelstop,(0,201,202,204,208,210)
animation206.pattern1,alternativestart,(207)

	animation207.interval,never
	animation207.pattern0,overlay,2003,0,0,0
	animation207.pattern1,overlay,2002,400-2000,0,0
	animation207.pattern2,overlay,2003,50,0,0
	animation207.pattern3,start,206

//Control animation for Half-closed
animation208.interval,never
animation208.pattern0,parallelstop,(0,201,202,204,206,210)
animation208.pattern1,alternativestart,(209)

	animation209.interval,never
	animation209.pattern0,overlay,2001,0,0,0
	animation209.pattern1,overlay,2002,400-2000,0,0
	animation209.pattern2,overlay,2001,50,0,0
	animation209.pattern3,start,208

//Control animation for Look up
animation210.interval,never
animation210.pattern0,parallelstop,(0,201,202,204,206,208)
animation210.pattern1,alternativestart,(211)

	animation211.interval,never
	animation211.pattern0,overlay,2006,0,0,0
	animation211.pattern1,overlay,2002,400-2000,0,0
	animation211.pattern2,overlay,2006,50,0,0
	animation211.pattern3,start,210

//--K Brows 250,251,252,253,254--------------------------------------------------------------------------

//Brow glare
animation251.interval,never
animation251.pattern0,parallelstop,(250,252,253,254)
animation251.pattern1,overlay,2251,0,0,0

//Brow squint
animation252.interval,never
animation252.pattern0,parallelstop,(250,251,253,254)
animation252.pattern1,overlay,2252,0,0,0

//Brow quirk
animation253.interval,never
animation253.pattern0,parallelstop,(250,251,252,254)
animation253.pattern1,overlay,2253,0,0,0

//Brow worry
animation254.interval,never
animation254.pattern0,parallelstop,(250,251,252,253)
animation254.pattern1,overlay,2254,0,0,0

}
//end of surface10

//--Sleeping Kadan--------------------------------------------------------------------------------------
surface11 //Kadan SLEEP testing 
{
collision0,86,66,115,101,Face
collision1,59,38,82,87,Head

//Dressups
//Glasses
animation350.interval,bind
animation350.pattern0,add,9350,0,0,0

//Hairpin
animation50.interval,bind
animation50.pattern0,add,950,0,0,0


//Kadan base element
element0,overlay,surface11.png,0,0

//Defaults
//Eyes default
animation0.interval,runonce
animation0.pattern0,overlay,2002,0,0,0

//Brows default
animation250.interval,runonce
animation250.pattern0,overlay,2200,0,0,0

//Back arm default
animation400.interval,runonce
animation400.pattern0,overlay,2300,0,0,0

//Front arm default
animation401.interval,runonce
animation401.pattern0,overlay,2300,0,0,0

//Mouth default
animation150.interval,runonce
animation150.pattern0,overlay,2100,0,0,0

//Tail default
animation12.interval,runonce
animation12.pattern0,interpolate,2400,0,0,0

//--K. Tail and other animated defaults (10,11)---------------------------------------------------------

//Control animation for Kadan's tail
animation10.interval,random,2000
animation10.pattern0,parallelstop,(12)
animation10.pattern1,alternativestart,(11)

	//tail neutral wag
	animation11.interval,never
	animation11.pattern0,interpolate,2400,0,0,0
	animation11.pattern1,interpolate,2401,200,0,0
	animation11.pattern2,interpolate,2402,200,0,0
	animation11.pattern3,interpolate,2403,200,0,0
	animation11.pattern4,interpolate,2400,200,0,0
	animation11.pattern5,interpolate,2400,200,0,0
	animation11.pattern6,start,10

//Talking (Kadan)----------------------------------------------------------------------------
animation1.interval,talk,4
animation1.pattern0,alternativestart,(2,3,4)

animation2.interval,never
animation2.pattern0,stop,150
animation2.pattern1,overlay,2100,100,0,0
animation2.pattern2,overlay,2101,130,0,0
animation2.pattern3,overlay,2102,80,0,0
animation2.pattern4,overlay,-1,100,0,0
animation2.pattern5,start,150

animation3.interval,never
animation3.pattern0,stop,150
animation3.pattern1,overlay,2101,140,0,0
animation3.pattern2,overlay,-1,100,0,0
animation3.pattern3,start,150

animation4.interval,never
animation4.pattern0,stop,150
animation4.pattern1,overlay,2102,140,0,0
animation4.pattern2,overlay,-1,100,0,0
animation4.pattern3,start,150

//--Interval stack blocks (Kadan)--------------------------------------------
//K. Arms count: 400,401,402,404,406,408
//Arms at sides
animation402.interval,never
animation402.pattern0,parallelstop,(400,401,404,406,408)
animation402.pattern1,overlay,2301,0,0,0

//Arms crossed
animation404.interval,never
animation404.pattern0,parallelstop,(400,401,402,406,408)
animation404.pattern1,overlay,2302,0,0,0

//Arms up and akimbo
animation406.interval,never
animation406.pattern0,parallelstop,(400,401,402,404,408)
animation406.pattern1,overlay,2303,0,0,0

//Arms self grasp
animation408.interval,never
animation408.pattern0,parallelstop,(400,401,402,404,406)
animation408.pattern1,overlay,2304,0,0,0

//--K. Mouths count: 150,151,152,153,154,155,156---------------------------------------------------
//Talk open
animation151.interval,never
animation151.pattern0,parallelstop,(150,152,153,154,155,156)
animation151.pattern1,overlay,2101,0,0,0

//Squiggle
animation152.interval,never
animation152.pattern0,parallelstop,(150,151,153,154,155,156)
animation152.pattern1,overlay,2103,0,0,0

//Small open
animation153.interval,never
animation153.pattern0,parallelstop,(150,151,152,154,155,156)
animation153.pattern1,overlay,2102,0,0,0

//Smile
animation154.interval,never
animation154.pattern0,parallelstop,(150,151,152,153,155,156)
animation154.pattern1,overlay,2104,0,0,0

//Half frown
animation155.interval,never
animation155.pattern0,parallelstop,(150,151,152,153,154,156)
animation155.pattern1,overlay,2105,0,0,0

//Hmmmm
animation156.interval,never
animation156.pattern0,parallelstop,(150,151,152,153,154,155)
animation156.pattern1,overlay,2106,0,0,0

//--K. Eyes count: 0,201,202,203,204,206,208,210----------------------------------------------------------
//Closed normal
animation201.interval,never
animation201.pattern0,parallelstop,(0)
animation201.pattern1,overlay,2002,0,0,0

//Smize closed
//animation203.interval,never

//--K Brows 250,251,252,253,254--------------------------------------------------------------------------
//Brow glare
animation251.interval,never
animation251.pattern0,parallelstop,(250,252,253,254)
animation251.pattern1,overlay,2251,0,0,0

//Brow squint
animation252.interval,never
animation252.pattern0,parallelstop,(250,251,253,254)
animation252.pattern1,overlay,2252,0,0,0

//Brow quirk
animation253.interval,never
animation253.pattern0,parallelstop,(250,251,252,254)
animation253.pattern1,overlay,2253,0,0,0

//Brow worry
animation254.interval,never
animation254.pattern0,parallelstop,(250,251,252,253)
animation254.pattern1,overlay,2254,0,0,0
}

//And that's it! We're done! But before we go, there are a few more little things you may want to think about.


//--surface.append-------------------------------------------------------------------
//This function is primarily for advanced users, so you can skip it if it seems too scary to you. Otherwise, read on. It may be useful.

//Surface.append basically applies the coding within the brackets to the poses specified in the number range. Specifically in this case it applies to collisions. If the collision areas for your ghost don't change very much from pose to pose, then you can set them here for multiple surfaces at once and save yourself some time.
//I'm not actually going to use surface.append since Girl and Triangle move around too much for their collisions to be that consistent between poses, but it's something could potentially come in handy for advanced users or ghost makers who have very stationary ghosts, so I'll leave it here and just append it to surfaces that don't exist so it won't get in the way. If you want to use this, study this example and see how it can apply to your own ghost.

surface.append500-590 //this is appending this code to Surface500 through Surface590.
//There are actually a few special ways you can refine this! For example, surface.append500-590,205 would append the code to Surface500 to Surface590, as well as Surface205. 
//surface.append500-590,205,!507-509 it would do the same, except it would skip Surfaces507 through 509.
//you can have multiple surface.appends as well, if you want to append one set of code to one range of surfaces and another to another. For example, one set of collisions to your main character and one to your side character.
{
collision0,15,16,111,48,Face
collision1,40,50,102,84,Point

//Because this is under surface.append, that means that these collisions are being set for every surface between the number range specified, in this case every Surface from 500 to 590. Make sure to put surface.append at the end of your file, so it can append the values to surfaces that exist.

//--bind-------------------------------------------------------------------------------

//Bind is an interval function only used for dress-up items, therefore if your ghost has no dress-up items, you will not need to bind anything and can safely disregard this. See the walkthrough page about clothing for more details about bind. I'll comment these out since the template won't have clothing items.

//51interval,bind
//51pattern0,999,2,add,0,0

//One final note on bind, note that it is also under surface.append along with the collisions up there. Meaning that this clothing would bind across those multiple surfaces just like the collisions. You can set up bind individually for a pose I think, but I honestly haven't messed around with it very much.

//You can use surface.append to technically apply anything across multiple poses, I'm pretty sure... even images. I haven't messed with this too much myself, but I'm pretty sure it's possible. As with many things with ghosts, this can come in handy if you're creative.
}


//--Unique Collision cursors------------------

//If you messed with the default Emily ghost at all, you may have noticed that when your cursor was over her chest, it changed to a sort of gripping hand instead of a pointer finger. "How do I do that?" you may wonder. Setting up sakura.cursor is how!

//sakura.cursor 
//{ 
//mouseup0,Head,system:hand 
//mousedown0,Head,system:finger 
//mouseup1,Face,system:hand 
//mousedown1,Face,system:grip 
//} 

//What this does is change the mouse cursor. You can see it's split into mouseup and mousedown, and it uses the names you gave your Collisions up there. So when the mouse is hovering over Girl's head, it uses the system cursor that looks like a hand. When you click and hold, it looks like a finger. You can uncomment these lines to see for yourself. Likewise, when you hover your mouse over Girl's face, it looks like a hand, and when you click down, it looks like a gripping hand. You can keep adding unique cursors for all your collisions by sequentially numbering them, like mouseup/down2, mouseup/down3, and so on.

//The system cursors you can use for this are "arrow", "cross", "no", "hand", "grip", "finger", "wait", "text", "move", and "help". You can probably guess at what they look like. Feel free to use whatever cursor you think would best match your collision.

//To set this up for the secondary character, just change sakura to kero, as usual.


//--Tooltips------------------

//Maybe you'd like a tooltip to pop up when your user is hovering over a hitbox on your ghost. It works much the same as above!

//sakura.tooltips 
//{ 
//Head,This is Girl's head. 
//Face,This is Girl's face.  
//}

//Basically put the name of your collision first, then what you want the tooltip to say. Uncomment this function and hover over Girl's hotspots and you can see how it works. It may be handy for warning your users about punching your ghost or something, or for silly reasons, I dunno. It's up to you!
//Like above, replace sakura with kero for the secondary character.



//--Surface.alias------------------


//There is another function along the same lines of surface.append and it's surface.alias. What it does is assign a range of numbers to a single number or word that can be called using \s[]. So here's an example.

//sakura.surface.alias
//{
//6666,[1229,1230,1231,1235]
//}

//What this means is that I could then go \s[6666] in dialogue and it would call any of these four Surfaces in the brackets. You can do words as well, like creepy,[1229,1230,1231,1235], and then you could call it with \s[creepy]. This may sound like a convenient shortcut to using words instead of numbers for your ghost's expressions, but I'd probably stick with numbers, really. It just feels like it'd backfire on you eventually.
//You can do the same thing with the side character by using kero instead of sakura.

//kero.surface.alias
//{
//6667,[1228,1232,1233]
//6668,[1228,1232,1233,1234]
//}
//And as you can see, you can have multiple surface aliases set up at any point. In this example, kero has both 6667 and 6668 defined as a range of Surfaces. So \s[6667] would call one of those three Surfaces, and \s[6668] would call one of those four Surfaces.

//---

//Now, if you don't think this is enough Surfaces and want to add more, all you have to do is copy and paste a chunk of Surface code, give it a new number, and then do whatever you want with it. You can define Surfaces all the way up to 999 without running into problems, so go crazy with them if you want! Some of my ghosts have a ridiculous amount of Surfaces because I have no self-control.
//Of course, to add new poses, you need to draw new frames for those poses. And I say again, make sure all your frames for a character are the same size if you can! It's so much easier to just put 0,0 than find specific coordinates. Unless you've run into the replace problem with mouths, in which case there's not much you can do about that.
//Once you add a new pose, save your surfaces.txt file and reload your shell using the Development Panel Reload option, or by just reloading your ghost entirely via Utilities - Reload Ghost. You can use Surface Test in the Development Panel to check your new Surface and see if it works and looks right! I always recommend testing your Surfaces, and it's usually pretty easy and simple. If it doesn't look right, tweak surfaces.txt, save, and try again.

//The length of this file is limited only by your imagination!



//*********************More on SERIKO coding*******************************


//I mentioned up above talking about some SERIKO functions for advanced users, so here I'll explain how some of them work. You can read about these on the SERIKO page on the walkthrough as well with (presumably) easier formatting on the eyes lol.


//--Random things
//You can have random things appear for a little while and then disappear using the random interval. This could be anything from a thought to an expression to a bird to a movement or whatever.

//6interval,random,60 //here the interval is set to random with a value of 60, meaning every 60ms there's a chance this will randomly happen.
//6pattern0,0404,0,overlayfast,0,0
//6pattern1,-1,5000,overlayfast,0,0

//This is much the same as the lines above. You'd replace 0404 with whatever image you'd be using. 5000 is the delay on the frame, so this stays on the screen for about 5 seconds. You can replace that value with whatever you want to change the timing, and change the number after random at the top to adjust how often it might occur.
//Note that at the end the image file number it calls is -1. -1 returns to the base default pose, so you'll want to end most unique or new animations with this to bring your ghost back to normal.

//--Other Animation Options
//There are a few other options you can have for interval animations. We've already seen bind, talk, random, and never so far. Some other ones are always, sometimes, runonce, and rarely. Their names are fairly self-explanatory I'd imagine, but I'll do some really quick examples from my other surfaces.txt files here.

//20interval,always
//20pattern0,182,0,overlay,0,0

//This would always run this animation.

//6interval,sometimes
//6pattern0,604,13,replace,0,96
//6pattern1,606,14,replace,0,96
//6pattern2,605,14,replace,0,96
//6pattern3,-1,10,overlay,0,0

//This would run this animation sometimes. Again, note how it ends with on a -1 frame.

//0interval,runonce
//0pattern0,41,13,replace
//0pattern1,42,19,replace

//This would run the animation once and stop on the last frame.

//20interval,rarely
//20pattern0,286,0,base
//20pattern0,288,0,replace,0,0
//20pattern1,287,15,replace,0,0
//20pattern2,-1,25,overlay,0,0

//This would run the animation rarely.

//So you see, fairly straightforward. You can use these animation options to set up other things for your Surface to do. Since I mentioned furries above, you could, say... have a sometimes animation for a tail waving or something. Or a rarely animation for someone coughing, or runonce for someone falling over.


//Interval Stacking
//This is definitely for advanced users, so if you're not interested in the HARD STUFF, you can move on, haha.
//Basically, what you can do with a surface is add a bunch of intervals that are never called (thus the never tag). Then when you are calling the pose with \s, you can add an \i tag with the right number to bring up that interval. What is the actual use of this? This is a perfect way to do eyebrows, for one. You can set up a variety of eyebrows for the same Surface under different intervals, set them all to never, and then just call them in the one pose with \s[0]\i[8] or whatever i number you need. You can also use multiple \i tags to call multiple intervals at the same time to layer effects, like \s[0]\i[5]\i[8]\i[22]. I used this in Hunter and Smoker to layer things like Hunter's ears, her eyes, and her eyebrows to create a ton of different expressions within the same pose.
//I am absolutely positive I will use this method with all my future ghosts since it saves SO MUCH SPACE because I make like a BILLION poses for everyone, but whether or not anyone else ever will, I have no idea. But that's basically how it works.

//This example bit of code here is an eyebrow frame set to never.
//8interval,never
//8pattern0,224,0,overlayfast,0,0


//--Stopping Intervals
//This is a huge part of interval stacking above, although you can use it for other things.
//So, I mentioned Hunter's ears. I wanted them to be able to move around with her mood, and I finally figured out a way to do it - I made her base element with no ears, and then set her default ears to "always". The problem was, how do I change the ear position if her default ears are always on? Through the use of a SERIKO function called stop, that's how. Basically, I would stop the always default ear interval and start the new one. I'm just going to straight up copy a snip of the code from there into here to look at. See how interval 21 stops 20. You can do the same thing with start instead of stop to start an interval - this can come in handy for stopping and starting different talk animations if you have smiling/serious talk frames in one pose.

//Ears back
//20interval,always
//20pattern0,182,0,overlay,0,0

//Ears neutral
//21interval,never
//21pattern0,0,0,stop,20 //the interval it's stopping as at the end, in this case it stops interval 20
//21pattern0,172,0,overlay,0,0

//There are a lot of ways you can use this. For example, in Hunter's battle-ready animation, she'd always be bouncing on her heels normally, but I put in a stop check for her talk interval so she'd stay still and her mouth frames wouldn't get all screwy. Perhaps others can think of other creative ways to use this feature.


//--Layering
//You can think of the intervals in a Surface as layers in a PSD file. The top layers will go on top of the other layers. You can use this to layer certain animations underneath others. If you layer a blink animation below... I dunno, a hair-blowing animation or a sweatdrop or something, the blink should go beneath the other layer and they shouldn't conflict. Hopefully. It's tricky to set-up, so you may need to go through some trial and error.
//As such you should always be mindful of the placement of your layers. Hair layers should go above eye layers, for example.
//This does NOT apply to replace, which does not care about layering and will pre-empt almost all other SERIKO functions like Always or Random. Which sucks. Be careful when using Replace.


//--Base
//Base is a newer interval setting I only figured out while doing the Gordon FLELE. Basically, what base does is change the base of your pose from one file to another, which has some limited application, but can come in handy. The best example is from Gordon - He was standing at a three-quarter view with one arm in front of him and one arm behind him. Moving the arm in front of him was easy, it just required layering that arm above all the others. Moving the arm BEHIND him was harder, because his body was the base frame and you can't move things behind that. To get it to work, I would use base to temporarily change the base to his back arm, then change it back after it had moved. To snag a bit of code from his surfaces.txt file...

//Left arm half out
//21interval,never
//21pattern4,0504,0,base,0,0
//21pattern5,-1,800,base,0,0

//Always make sure to set the base back to the original image with -1 at the end. It might be easier to just have the body in a higher layer than your back arms though... but that's just the application I found for this. It might be just what you need for whatever you're doing.


//--Replace
//Alright, here we go. Replace basically does what it says - it replaces the image (or part of the image) with another image. Have you noticed so far that the last two numbers of all the pattern lines have almost always been 0,0? Go ahead, scroll up again and look. Almost always 0,0. That's because if all your images are the same size (and they definitely should be, this is the very reason why you should be doing that), they will always line up properly with each other, and you'll almost never have to put anything but 0,0.
//Unless you're using replace.
//Actually that's not entirely true. If you're replacing the ENTIRE image with a new one, then you can leave replace as 0,0. That can be handy for full body animations like... someone getting hit, for example. You could have four unique frames of them falling to the ground, and you'd use replace for each of those frames to change the entire image each time.
//However, most of the time (at least in my experience) you're going to be using replace for smaller things, primarily mouths in profile view I'm going to guess. And if you're going to be doing that, you're going to need to find yourself some coordinates. Do you remember setting up collisions up there? This is much the same thing. First, let's pull up a bit of replace code. I'll use one from Hunter and Smoker as an example. Here's one of Smoker's talking animations where she's in profile. You can see the frames for this on the surfaces.txt page of the walkthrough.

//talking
//1interval,talk,4
//1pattern0,0,0,alternativestart,[2.3.4]

//2interval,never
//2pattern0,708,13,replace,0,72
//2pattern1,-1,10,overlay,0,0

//3interval,never
//3pattern0,709,14,replace,0,72
//3pattern1,-1,10,overlay,0,0

//4interval,never
//4pattern0,709,14,replace,0,72
//4pattern1,708,14,replace,0,72
//4pattern2,-1,10,overlay,0,0

//You'll see at first that it's very similar to the talk function we set up above. However, there is a distinct difference. Overlay has been replaced with replace, and the final number is different. Those two numbers are the x,y coordinates for that image, and tell it where it needs to replace.
//In the interest of making this as simple as possible, and avoiding a problem I ran into when I cropped things too tightly, what you're going to do is go into your image with your profile talk frames. You are going to draw a rectangle that VERTICALLY just about covers your mouth frames, and HORIZONTALLY spans your entire image. Then you'll crop your image down to that rectangle. What this will create is an image that is the same WIDTH as your base image, but a different HEIGHT. Save those images as your mouth frames.
//Since your new mouth frame is the same width as your base image, you can leave it as 0. How do you find the second number then? The second number is the Y value, and it's the top of your rectangle. Undo your crop so your image is its base size again, hold your cursor at the top of your rectangle, and look at the coordinates in Photoshop info or MSPaint or whatever. Write down that Y number, and put it in here. Test your shell and see if the mouth frames line up properly. If they're a pixel too high or low, adjust the number until they line up right.
//You'll notice the last line in each interval, the one with -1 and with the remaining overlay tag, is still set to 0,0. That's because that's the animation returning to normal. You don't have to mess with that line. Just replace the 708 709 whatever numbers in the replace lines with what you're using.

//"But Zar!" you exclaim. "If I go all the way horizontally, then I run into my eye frames, and the blinking animation doesn't look right because replace doesn't care about me!" in which cause ouch, because that sucks and means you're going to have to get a little more into this.
//Alright, this time, draw your same rectangle over your mouth frames. THIS TIME, however, don't stretch it all the way across. Draw it as close to your mouth frames as you can without filling up the entire rectangle. Specifically, leave at least ONE PIXEL blank in the top left corner if you possibly can. If you don't that pixel will flicker during the animation and if you're like me it will slowly drive you insane.
//Once you've drawn your rectangle, take your cursor and find the coordinates again. This time, look for the y coordinate at the top of the rectangle, and x at the left side of it if I remember right. Write them down, come back over here, and fill out the last two numbers of each line as appropriate. Go back to your image, crop it down to your rectangle, and save your mouth frames. Test. Adjust. Repeat until it looks right.
//You can see now why I recommended keeping your mouth frames inside your silhouette as much as you can. If you are running into the blink problem, you can try putting your blink interval above your talk interval. So if your talk intervals are 1-4 for example, you could put blink as 5interval instead. That could fix your problem! Maybe. Surfaces.txt can be annoying.

//As a side note, replace will go over bound items like dress-up items, so keep this in mind if you're making clothes for your ghost. 
//Replace will also take precedent over most other animation methods like Random or Always. For example, if you set up something to always play in the background, like... let's say, a fire was behind your character, and at some point you wanted to use replace on the main body of your character to say, make them move their arm. Replace will then shut off the Always interval and do its own thing, no matter how you layer it. It works okay with Overlay though. Basically, you'll need to mess with it a bit yourself to see when it works and when it doesn't.

//--Move
//The last of the animation functions and one that's really fairly simple. Move just moves the frame around your screen. This is handy when you want to move your character but don't want to draw a ton of frames for it.
//Here's an example from my Hunter and Smoker file. This is when Hunter would get hit in battle. She'd slide backwards a little bit.

//sliding back slightly
//0interval,runonce
//0pattern0,0,15,move,1,0
//0pattern1,0,5,move,2,0
//0pattern2,0,7,move,3,0
//0pattern3,0,10,move,4,0
//0pattern2,0,15,move,5,0

//As you saw above with the replace option, the last two numbers of any line are the x and y values. In this case, Hunter is sliding horizontally across the ground, so I changed the first number, the x. Over the course of five frames, she slides about five pixels back. You can adjust the timing by changing the number before move in each of them.
//You can use this to move your character around wherever you want. Horizontally, vertically, both at the same time, and at any speed you want. If you just set it to one frame with no delay, they'll just teleport over there.
//However, your character will stay where they moved unless you move them back, they go into another pose, or OnSurfaceRestore moves them back I think (see aitalk.dic). So you may want to set up some reverse move frames to bring them back to 0,0.
//One really handy use for move is making things bob up and down (like a thought bubble) without having to draw new frames for it.

//***********************************************************************