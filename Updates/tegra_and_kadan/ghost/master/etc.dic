//---------------------------Miscellaneous Functions--------------------------
//Tegra and Kadan

//This .dic file is concerned with a number of functions that didn't quite fit in anywhere else. If you're adding new functions, this may be the place to do it! This also has the functions related to updating your ghost, among others. Most of this will just be replacing placeholder dialogue with dialogue more appropriate for your ghost, and this file is fairly long. On the positive side, you'll probably only have to go through it once.
//Make sure to read the walkthrough page (http://www.ashido.com/ukagaka/walkthrough.html) for more details about how to properly format ghost dialogue!
//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!


//--Functions by Zichqec*****************************************************************************************
//--Parallel Dialogue Pools
//Written by Zichqec https://zichqec.github.io/s-the-skeleton/

//parallel Pool("Pool_Example","%(example == 'True')")
//parallel Pool("Pool_Example",example == 'True')

Pool
{
    if TOINT(_argv[1]); EVAL("%(_argv[0])")
}


OnNeedlePoke //Special event if Zi's Needle ghost overlaps 
{
	if reference0 == 0 //Tegra
	{
		"\0\s[0]\i[[23]\i[202]Ow!\i[406]\i[403]\i[41]"
		"\0\s[0]\i[[25]\i[202]What was that?!\w4 Something stung me...?\i[153]"
		"\0\s[0]\i[202]\i[410]\i[403]That's not you, %(username),\w4 is it?!\i[204]\i[41]"
	}
	elseif reference0 == 1 //Kadan
	{
		"\1\s[10]\i[252]What in the world...?\w4 An insect?"
		"\1\s[10]\i[251]\i[201]\i[404]\i[405]You'll not get through my scales that easily,\w3 I'm afraid."
		"\1\s[10]\i[251]\i[202]...Something just poked me.\w8\0\n\n[half]\s[0]\i[202]\i[410]\i[403]A ghost!\w8\1\s[10]\i[251]\i[404]\i[405]\n\n[half]Tegra, we've discussed this.\w3 Ghosts aren't real;\w3 they can't hurt you.\w8\0\n\n[half]\s[0]\i[253]\i[406]\i[407]It is too a ghost\w3, I can sense it!\i[153]\e"
	}
	
	//etc...
}

//--Capitalize
//Written by Zichqec

//To call the function, you can either call the function in your code like this:
//Capitalize(SomeEnvelope) or Capitalize("some text")
//Or in dialogue like this:
//"%(Capitalize(SomeEnvelope))" or "%(Capitalize('some text'))"

Capitalize
{
	_buffer = SUBSTR(_argv[0],0,1) //Storing the first character in _buffer
	_argv[0] = ERASE(_argv[0],0,1) //Erasing the first character from _argv[0]
	_argv[0] = INSERT(_argv[0],0,TOUPPER(_buffer)) //Making the character in _buffer uppercase and inserting it back into _argv[0]
	_argv[0] //Returns the capitalized word
}

//--End of Functions by Zichqec*****************************************************************************************


//--OnFileDrop2

//OnFileDrop2 handles how your ghost will set an image as the desktop background when someone drags and drops an image on them. You don't need to touch any of the coding here, just replace the dialogue as needed and leave the \q options alone. More about \q options in bootend.dic and in the walkthrough.

OnFileDrop2
{
	_filepath = SPLITPATH(reference0)
	_filename = _filepath[2]
	_fileext = TOLOWER(_filepath[3])
	case _fileext
	{
		when ".jpg", ".jpeg", ".bmp", ".png" //These are the formats your ghost will recognize as image files to set as the background.
		{
			Wallpaperfile = reference0
			
			"\0\s[0]You handed me %(_filename)%(_fileext)???\w8\1\n\n[half]\s[10]How quaint. I suppose you want us to set this as your wallpater for you, %(username)?\n\n[half]/
			\![*]\q[Centered,SetWallpaper_0]\n/
			\![*]\q[Tiled,SetWallpaper_1]\n/
			\![*]\q[Stretched,SetWallpaper_2]\n\n[half]/
			\![*]\q[No thanks,SetWallpaper_Cancel]\e"
		}
		when ".mid", ".wav", ".mp3", ".wma", ".au" //Other file formats you might want to give your ghost a specific response to.
		{
			"\0\s[0]\i[406]Ooh, %(_filename)%(_fileext) is an audio file!\e"
		}
		others //Any other file format. As a note here, if you drop something ghost-related on them that does not have an install.txt, then they won't install it and will just say this response. If you are testing your balloon or nar files and you get this response instead of a proper installation, you should check and make sure you have an install.txt in the file!
		{
			"\0\s[0]\i[410]\i[254]Oh??? This is %(_filename)%(_fileext)!\e"
		}
	}
}

//This set of options sets the wallpaper up. You can replace the dialogue, but make sure to leave the \![set,wallpaper, etc.] tag at the beginning.

Select.SetWallpaper_0
{
	"\![set,wallpaper,%(Wallpaperfile),center]\0\s[0]There!\w8\1\n\n[half]\s[10]Perfectly centered.\i[154]\e"
}
Select.SetWallpaper_1
{
	"\![set,wallpaper,%(Wallpaperfile),tile]\0\s[0]\i[204]We tiled the image for you!\w8\1\n\n[half]\s[10]\i[201]Very meditative.\e"
}
Select.SetWallpaper_2
{
	"\![set,wallpaper,%(Wallpaperfile),stretch]\0\s[0]\i[203]Done!\w8\1\n\n[half]\s[10]...Hopefully the image didn't get distorted.\e"
}
Select.SetWallpaper_Cancel
{
	"\0\s[0]\i[410]You don't want to set the file as your desktop background?\w8\1\n\n[half]\s[10]Understood.\e"
}


 //---- OnInstallBegin -------------------------------------------------------
 //OnInstallBegin is called when a file with an included install.txt is dropped on your ghost. This primarily means things like .nar files for other ghosts or .zip files containing balloons or shells for your ghosts. Primarily ghost-related things. Replace as you want.
 
OnInstallBegin
 {
	"\0\s[0]\i[204]\i[406]We'll totally install this file!\w8\1\n\n[half]\s[10]\i[204]This zip or nar contains an install.txt file, so make sure you read it.\e"
 }

 //---- OnInstallComplete -------------------------------------------------------
 //OnInstallComplete runs once the file above has finished installing.
 
OnInstallComplete
 {
	"\0" //this means your main character will be speaking first, therefore the \s[] at the beginning of each line will be defining your main character's pose.
 	--
	if reference0 == "shell" 
 	{	
		if reference1 == "Tegra and Kadan Spa Day Shell" 
		{
		"\s[0]\i[203]We installed %(reference1)!\w8\1\n\n[half]\s[10]Huzzah.\e"
		//Replace if needed.
		}
		elseif reference1 == "Tegra and Kadan Mirrorverse Shell" 
		{
		"\s[0]\i[203]We installed %(reference1)!\w8\1\n\n[half]\s[10]\i[210]Sounds a bit edgy.\e"
		}
		else //For any other shell they may install.
		{
		"\s[0]\i[203]We've installed a new shell.\w8\1\n\n[half]\s[10]It's called  %(reference1).\e"
		}
 	}
	elseif reference0 == "ghost" //if the type of the file they're installing is a ghost.
 	{
		"\s[0]\i[203]We installed a new Ghost!\w8\1\n\n[half]\s[10]It's called %(reference1).\e"
		//Reference1 here would be the name of the ghost. Replace as needed.
 	}
	elseif reference0 == "balloon" //if the type of file is a balloon
 	{
		"\s[0]\i[203]We installed a new balloon!\w8\1\n\n[half]\s[10]It's called %(reference1).\e"
		//Reference1 here would be the name of the balloon. Replace as needed.
 	}
	elseif reference0 == "plugin" //if the type of file is a plug-in, like a saori of some kind.
 	{
		"\s[0]\i[203]We installed a plug-in!\w8\1\n\n[half]\s[10]It's called %(reference1).\e"
		//Reference1 here would be the name of the plug-in. Replace as needed.
 	}
	elseif reference0 == "calendar skin" //if the type of file is a calendar skin
	{
		"\s[0]\i[203]We installed a calendar skin!\w8\1\n\n[half]\s[10]It's called %(reference1)."
	}
	elseif reference0 == "headline" //if the file/url you drop on them is counted as a headline. To be honest with you I don't know what determines whether a url is a headline or what.
	{
		"\0\s[0]\i[203]We set up a headline!\w8\1\n\n[half]\s[10]It's called %(reference1).\e"
	}
	elseif reference0 == "rss" //this is more clearly for when you drag an rss feed onto your ghost. you can find rss feeds on sites by looking for the little rss icon, it kind of looks like a little satellite. you can google more info on rss feeds if you're curious!
	{
		"\0\s[0]\i[203]We set up a headline!\w8\1\n\n[half]\s[10]It's called %(reference1).\e"
	}
	else //for any other file they'd install
	{
		"\s[0]\i[203]We installed %(reference1)!"
	}
}

//---- OnInstallFailure -------------------------------------------------------
//If the file you dropped fails to install for one reason or another.

OnInstallFailure
 {
	"\0\s[0]\i[202]\i[253]Oops! The installation failed.\n\n[half]\w5" //this first bit of dialogue begins the explanation of what happened. You can replace this with an appropriate intro statement.
	--
	if reference0 == "unsupported" 
	{
	"It looks like this file is unsupported...\e"
	}	
	elseif reference0 == "extraction" //This checks if the file didn't extract properly.
	{
	"The file couldn't be extracted properly...\e"
	}
 }
 
 //--OnInstallRefuse
 //If the file you dropped can't be installed with this ghost.
 
OnInstallRefuse
 {
	"\0\s[0]\i[202]\i[253]\i[410]We can't install this! \w4It might be for %(reference0) instead...?\e"
 }

//**** Uninstallation ******************************************
//You may have noticed in the configuration menus in menu.dic an option to turn Uninstall on or off, as well as a greyed out option to uninstall in the right click menu. These following functions relate to the uninstallation process when it's on. Replace the dialogue in each function as we go along.

//--OnVanishSelecting
//When you select the uninstall option in the menu.

OnVanishSelecting
{
	"\0\s[0]\i[410]Oh, %(username) is deciding whether or not to uninstall our Ghost.\w8\1\n\n[half]\s[10]\i[204]Just be mindful of what you select here, %(username)\w4, if you don't intend to uninstall.\e"
}

//OnVanishSelected
//When you decide to uninstall them. 

OnVanishSelected
{
	"\0\s[0]Looks like our Ghost is getting uninstalled.\w4\i[203] It's been fun, %(username)!\i[158]\w8\1\n\n[half]\s[10]\i[201]Take care, %(username).\w9\w9\e"
}


//--OnVanishCancel
//If you select Uninstall from the menu, but decide not to do it.

OnVanishCancel
{
	"\0\s[0]\i[410]I guess our Ghost isn't getting uninstalled after all.\w8\1\n\n[half]\s[10]\i[201]Fine.\e"
}

//--OnVanishButtonHold
//This should trigger if you double click the ghost's balloon in the middle of OnVanishSelected above. So it basically cancels their uninstallation. I'd be pretty careful about testing this, and I'd probably just put the line of dialogue into their script input and test it that way instead.

OnVanishButtonHold
{
	"\1\s[10]\i[204]Oh, have you changed your mind, %(username)?\e"
}


 //---- OnVanished -----------------------------------------
 //OnVanished is a weird little function. Basically, if you uninstall a ghost, it'll automatically go back to the last ghost you were using. They'll then say this line of dialogue about the ghost you just uninstalled. This is very annoying to test as you can imagine! But unlikely to come up super often, I bet. You might as well be thorough and fill this out as well. Make sure to set up both their poses immediately so they both appear when it switches back to them.
 
OnVanished
 {
	"\0\s[0]\1\s[10]\i[201]%(reference0) has been uninstalled, it seems.\w8\0\n\n[half]\s[0]\i[204]Kadan and I are on deck to pick up the slack!\i[158]\e"
}


//**** Mail Checking *******************************************************************
//The next set of functions have to do with checking your email. This function is a slippery little thing - I've had people test it following my directions and have it work, but I've never actually gotten it to report back the right amount of emails myself. Very frustrating. But perhaps you'll have more luck with it, haha.
//*********************Advanced User Info*******************************
//If you want to set up your ghost to check your mail so you can more easily check these messages instead of just writing the dialogue and moving on, it's a little bit tricky, but not super hard.
//Basically, you're going to need to find your POP settings for your email account. Googling your provider + POP should bring it up pretty quick. Once you have the info, you'll go to the right click menu, options, then preferences. A big menu should pop up, and you should see POP in the left side. Click that, and input all the info from the POP page you looked up for your account. Tell your ghost to check your email, and if it works, then congratulations!
//***********************************************************************

 //---- OnBIFFBegin ---------------------------------------------------------------
 //When you first tell the ghost to check your email. An intro statement, if you will. Replace with whatever you like.
 
OnBIFFBegin
 {
	"\0\s[0]\i[204]Let's see if you have any mail, %(username)!\e"
	
	"\1\s[10]\i[204]Keeping up on your correspondence\w3, how reliable.\e"
 }

 
 //---- OnBIFFComplete ---------------------------------------------------------------
 //After they've succeeded in checking your mail, they'll report back with how many new emails you have. Replace the dialogue with whatever would be character appropriate.
 
OnBIFFComplete
 {
	if reference0 == 0 //If you have no new mail.
 	{
 		"\0\s[0]Aww, no new mail.\e"
	}
	elseif reference0 == 1 //If you have one new email.
 	{
 		"\0\s[0]You have one new email.\e"
	}
	elseif reference0 > 1 && reference0 < 11 
	{
		"\0\s[0]You have %(reference0) emails!\e"
	}
	elseif reference0 > 100 //If there are over one hundred new emails.
	{
		"\0\s[0]Oh, %(username)! You have %(reference0) emails!!!\w8\1\n\n[half]\s[10]\i[204]Gracious, you ought to do something about that.\e"
	}
 	else //For any other number of emails.
	{
		"\0\s[0]\i[204]You have %(reference0) emails!\e"
 	}
}

 //---- OnBIFFFailure ---------------------------------------------------------------
 //Various error messages that can happen when your ghost tries to connect to an email account. Replace the dialogue as appropriate.
 
OnBIFFFailure
 {
	if reference0 == "timeout" //If the connection times out.
 	{
 		"\0\s[0]\i[251]\i[203]\i[406]\i[407]Aw, charity!\w3 The connection timed out.\i[161]\e"
	}
 	elseif reference0 == "kick" //If the account blocks the ghost from accessing it. I think gmail may do this at first to try and protect your account from unapproved applications using it. It gives you the option to change the setting in the warning email they send you about it.
	{
		"\0\s[0]\i[254]\i[202]Whoops!\w4\s[0]\i[204]\i[410] We can't access your mail account.\e"
 	}
	elseif reference0 == "defect" //If the information put into the POP menu is wrong.
 	{
 		"\0\s[0]\i[254]\i[410]No offense, but I don't think your email account was set up right.\w8\1\n\n[half]\s[10]You can reset it at the POP menu.\w8\![open,configurationdialog]\e"
		//Note that this ends with \![open,configurationdialog]. This will open up the preferences menu I described above automatically. More on \! functions in the walkthrough. You can delete the \! tag here if you want to.
	}
 	else //if there's some other kind of error.
	{
		"\0\s[0]Ah, we can't connect to the account...\i[152]\w8\1\n\n[half]\s[10]The error returned was '%(reference[0])', just so you know.\e"
		//reference0 here stores the error message the email server would have given the ghost, hopefully.
 	}
}


 //**** Network Update *****************************************************************
 //The following functions are for the Network Update of your ghost, where it will connect to your website, check for new files, and update itself. This is a handy feature, but tricky to set up. If you have no intention of using Network Update, you can disregard these, but it won't hurt to fill them out anyway just in case. More details about how to set up Network Update are in the walkthrough (http://www.ashido.com/ukagaka/).
 
 //---- OnUpdateBegin -------------------------------------------------------------
 //When you first tell your ghost to update. An introductory statement, like OnBIFFBegin above. Replace or add more dialogue as appropriate. Note that they end with \w8 to give a little breather time.
 
OnUpdateBegin
 {
	"\0\s[0]\i[204]\i[406]We're starting the update process, okay?\w8\e"
	
	"\1\s[10]\i[204]\i[404]We'll be starting the update process now. You're welcome.\w8\0\n\n[half]\s[0]I hope %(username) followed the instructions.\w4\i[254]\i[212] I get confused...\w8\1\s[10]\n\n[half]And quite easily,\0\s[0]\i[202]\i[254]\i[152]\1\s\[10] at that.\e"
 }

 //---- OnUpdateReady ---------------------------------------------------------
 //If the ghost finds new files to update with.
 
OnUpdateReady
 {
 
	reference0++ //makes sure it starts at 1 instead of 0
	
    "\1\s[10]\i[406]\i[201]There are %(reference0) new files available.\w8\e"
	
	//reference0 here storing the number of new files. You don't have to use it if you don't want to.
 }


//---- OnUpdateComplete -------------------------------------------------------------
//When the ghost has finished the update process.

OnUpdateComplete
 {
	if reference0 == "none" //if the ghost had nothing to update with
 	{
 		"\1\s[10]\i[201]There are no new files available.\e"
		
		"\1\s[10]\i[201]We have no new files to update with.\e"
	}
 	else //if the ghost has updated successfully
	{
		"\1\s[10]Update successful.\i[201] How satisfying.\i[154]\w8\0\n\n[half]\s[0]\i[203]Yaay!! <3\i[160]\e"
 	}
}

 //---- OnUpdateFailure -------------------------------------------------------------
 //Error messages if the update process fails in some way.
 
OnUpdateFailure
 {
	if reference0 == "timeout" //if the connection times out
 	{
 		"\1\s[10]The update connection timed out... Annoying.\e"
	}
 	elseif reference0 == "md5 miss" //This is the final message displayed when you've run into an md5 error below at some point.
	{
		"\1\s[10]The MD5 hash of the files don't match.\w8\0\n\n[half]\s[0]\i[253]\i[202]Spooky!\i[152]\w8\1\s[10]\i[204]\n\n[half]For your safety and ours, we'll stop here.\e"
 	}
	else //for other errors
 	{
 		"\1\s[10]The update could not be completed.\w3\i[201] Our apologies.\w8\0\n\n[half]\s[0]\i[210]Hmm...The error is '%(reference0)'..?\e"
	}
 }


 //---- OnUpdate.OnDownloadBegin ------------------------------------------------
 //This dialogue plays when they begin downloading a new file. WARNING: if you have big plans for your ghost and are going to make a lot of new image files for it (like... i do, cough) at some point, you're going to want to make these messages very brief, if you even have them at all. The reason is because the user will see these messages for EVERY individual file that they have to download, and if you have, say, 50 pna files in the queue, they will see this dialogue 50 times. Not only that, but displaying the dialogue takes some time, so it also extends the download process.
 //If you aren't planning on adding a ton of files at any point, or are only intending to update the .dic files which will be at most a handful of files, then you can go ahead and put a short message in here. But if your ghost is going to grow in leaps and bounds as you work on it, try and keep these messages as brief as possible (or again, just make it "" to have there be no message at all) to make the process that much faster for your user.
 
OnUpdate.OnDownloadBegin
 {
 	if "aitalk" _in_ reference0 
 	{
 		"\0\s[0]\i[204]\i[252]We're going to download more dialogue!\i[160]\w8\1\n\n[half]\s[10]\i[201]As if she needs to talk even more...\i[404] It's in the aitalk file.\i[152]\e"
 	}
 	else //for files not specified above
 	{
	"\1\s[10]\i[406]\i[204]We've found a new file.\e"
	
	"\0\s[0]\i[203]Oooooh, a shiny new file\i[160]e"
	}
 }

 //---- OnUpdate.OnMD5CompareBegin ---------------------------------------------------
 //This checks the hash value of the files in the directory and the files listed in updates.dau, I believe. It will do this for every file the user downloads, so I again remind you of my warning above! For every file they download, they will have to go through three sets of unique dialogue, and it can get old fast. Not to mention it slows things down a lot. Again, I would recommend keeping this very brief, if not just replacing it with "..." or "" instead.
 
OnUpdate.OnMD5CompareBegin
 {
	"\1\s[10]\i[201]Checking the MD5 value.\e"
 }

 //---- OnUpdate.OnMD5CompareComplete --------------------------------------------------
 //After they've checked the MD5 value and it matches. See above about the length of this message.
 
OnUpdate.OnMD5CompareComplete
 {
	"\0\s[0]\i[203]MD5 check okay!!! <3\i[158]\e"
}

 //---- OnUpdate.OnMD5CompareFailure ---------------------------------------------------
 //If the MD5 values don't match, meaning if the file is missing or damaged or incomplete in some way. If you follow my Network Update directions carefully, this shouldn't come up very often, but don't be surprised if you run into it every now and then by forgetting a file here or there.
 
OnUpdate.OnMD5CompareFailure
 {
	"\0\s[0]\i[253]\i[202]The MD5 values don't match!\w8\1\n\n[half]\s[10]\i[204]\i[402]A file could be missing or incomplete. Please check on it.\e"
 }

 
 //**** Headlines and RSS Feeds *********************************************************
 //This section has to do with the RSS feeds option on your ghost. If you drag and drop a url on them, they'll add it to a list you can access via the right-click menu, and they'll tell you the last set of updates for the site. This works best with RSS feeds I think, but you can experiment with other sites to see how it works.
 //The headlines you see under the tab are in the headline folder under your base SSP install. So it'd be SSP\headlines. You should see the folders for each linked headline in there. I've very rarely ever messed with them or used them. Likewise, your RSS feeds you've added will be under SSP\rss and I don't think that option will appear in the headlines/RSS tab until you add an RSS feed to a ghost. If you want to clear your RSS feeds or headlines, just delete either of those two folders.
 

 //---- OnHeadlinesenseBegin -----------------------------------------------------------
 //This dialogue comes up when you select something in your RSS feed as an intro, like the other On[Thing]Begin things we've seen so far. Replace as you need.
 
OnHeadlinesenseBegin
 {
	"\0\s[0]\i[204]You picked %(reference0)!\e"
 }

 //---- OnHeadlinesense.OnFind --------------------------------------------------------
 //This actually displays the feed. My set-up for it is pretty simple but gets the job done, it just has the name of the feed, a line space, then a list of links. You shouldn't have to edit any of these and I probably wouldn't honestly.
 
OnHeadlinesense.OnFind
{
	//----  What page You're on
 	if reference2 == "First" || reference2 == "First and Last"
	{
 		//---- First page
		"\0\b2\s[0]%(reference0):"
 	}
	elseif reference2 == "Next"
 	{
		//---- Second page
 		"\0\b2\s[0]%(reference0):"
	}
 	elseif reference2 == "Last"
	{
 		//---- Last page
		"\0\b2\s[0]%(reference0):"
 	}
	--
 	//---- Headlines
	"\n\n%reference3\n"
 	--
	//---- Pages
 	if reference2 == "First" || reference2 == "Next"
	{
 		//---- Bottom buttons
		"\![*]\q[Next,] - \![*]\q[Stop,Headline_Cancel]\e"
 	}
	else
 	{
		//---- Bottom buttons
 		"\![*]\q[Stop,Headline_Cancel]\e"
 	}
	
}


Select.Headline_Cancel
{
	"\0\s[0]\i[203]Done looking at headlines! <3\i[158]\e"
}

 //---- OnHeadlinesenseComplete -------------------------------------------------------
 //This is an odd function. As far as I can gather, this is if the headline information gathering was successful, but there's no new information to report. Possibly if none of the feeds have updated? I'm a little fuzzy on this one.
 
OnHeadlinesenseComplete
 {
	"\0\s[0]\i[204]I didn't find any updates! %(reference0).\e"
 }

 //---- OnHeadlinesenseFailure ---------------------------------------------------------
 //This one is more clearly for when the ghost can't get the information it needs about the RSS feed in question.
 
OnHeadlinesenseFailure
  {
	"\0\s[0]\i[210]\i[410]...I can't update the feed...?\w8\1\n\n[half]\s[10]\i[406]Why is that, Tegra?\i[156]\w8\0\n\n[half]\s[0]\n\n[half]" //This sets up an exchange between the two characters. The final part of the exchange continues below in the if statements.
 	--
	if reference0 == "can't download" //if they can't download the rss feed for some reason
 	{
		"I can't get it downloaded."
 	}
	elseif reference0 == "can't analyze" //if they can't read the file for some reason
 	{
		"I can't read the file."
 	}
	else //other errors
 	{
		"I don't know?!"
 	}
	--
 	"\e" 
}


//**** Ghost Creation and Updating ******************************************************
//These next few are related to creating updates2.dau and .nar files for your ghosts. You'll want to at least make a .nar to distribute your ghost, and if you're going to be using Network Update, you'll also want to make updates2.dau as well. It's unlikely that anyone other than you will see these messages, but you should be thorough and replace them anyway.
//Primarily, you will see these messages when you're creating your updates file or updating your ghost.nar file. More on this on the walkthrough page. However, you can drag and drop another ghost's folder onto them and they'll also create a nar for that as well, if for some reason you want to do that.


 //---- OnUpdatedataCreating -----------------------------------------------------------
 //This will begin the creation of the updates2.dau file. Not unlike the other beginning functions you've seen throughout this file. Replace with whatever you like.
 
OnUpdatedataCreating
 {
	"\1\s[10]\i[201]Creating the updates2.dau file.\e"
 }

 //---- OnUpdatedataCreated -------------------------------------------------------------
 //After the updates2.dau file has been successfully created. Replace with whatever.
 
OnUpdatedataCreated
 {
	"\0\s[0]\i[203]Success~!\w3 We created updates2.dau!\i[158]\e"
 }

 //---- OnNarCreating ------------------------------------------------------------------
 //Along the same lines, this is when they begin creating a .nar file for your ghost. .nars are the format most ghosts will be in, something similar to a .zip file, and this is the format you'll be distributing your ghost in most likely. Replace the dialogue with whatever you like.
 
OnNarCreating
 {
	"\0\s[0]\i[203]Creating the .nar file!\e"
 }

 //---- OnNarCreated -------------------------------------------------------------------
 //After the nar file has been successfully created.
 
OnNarCreated
 {
	"\1\s[10]\i[201]Successfully created '%(reference0)'.\e"
 }

 //****　Clock Synchronization　**********************************************************
//**** 미카 (http://homepage2.nifty.com/ko-ki/)의 사전을 참고했습니다．감사＞こ 나무 성
//This set of functions was done by the above Korean coder, I think. I'll leave their comment there untouched. 
//If you right click your ghost and go into the Utilities menu, there's an option called NTP Time Sync. That's what this is for!
 
 //----OnSNTPBegin ------------------------------------------------------------------
 //As with the others you've seen above, this is the beginning bit of dialogue for this process.
 
OnSNTPBegin
 {
	"\0\s[0]We're going to check the time!\w9\1\n\n[half]\s[10]We are connecting to %(reference0).\e"
	//%(reference0) here is the site they'll be using to check your clock. I wouldn't worry too much about what the site is or where it's defined, it should be accurate. Replace the dialogue with what you need, you don't have to use reference0 if you don't want to.
 }

 //----　OnSNTPCompare----------------------------------------------------------
 //Now the ghost is going to compare the current time of your computer's system to the time of the site they connected to. Most of this you don't have to touch, just replace the dialogue as indicated.
 
OnSNTPCompare
 {
 	"Retrieved Time: %reference1[1]/%reference1[2]/%reference1[0] %reference1[3]:%reference1[4]:%reference1[5]\w2\n/
	Your Time: %reference2[1]/%reference2[2]/%reference2[0] %reference2[3]:%reference2[4]:%reference2[5]\w2\n/
 	\n"
	--
 	if reference3 == 0 //if your clock is already accurate.
	{
 		"\0\s[0]\i[203]Nice! Your clock is accurate!\i[158]\e" 
	}
 	else //if your clock doesn't match
	{
 		"\1\s[10]Your clock doesn't match. \w6\nShould we fix it for you?\n\n[half]/
		\![*]\q[Fix it,OnSNTPEXECUTE]\n/
 		\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
	}
 }

 //----　OnSNTPEXECUTE ------------------------------------------------------------------
 //After they've fixed your clock. Note the \6 tag - that's what actually changes the clock. Do not remove that tag. Replace the rest with what you want.
 
OnSNTPEXECUTE
 {
	"\1\s[10]The clock has been fixed.\w4\i[204] You're welcome.\6\e"
 }

 //----　OnSNTPCANCEL ------------------------------------------------------------------
 //If you decide not to change your clock when they tell you it doesn't match. Replace with what you want.
 
OnSNTPCANCEL
 {
	"\0\s[0]\i[204]Okay, %(username), we won't change the clock.\e"
 }

 //----　OnSNTPFailure ------------------------------------------------------------------
 //If they can't change the clock for some reason, possibly because the site timed out but it could be anything. Replace with what you want.
 
OnSNTPFailure
 {
	"\0\s[0]\i[210]Ummm, we couldn't change the clock.\w8\1\n\n[half]\s[10]Something went wrong, it seems.\e"
 }


 //--OnDisplayChange----------------------------------------------------------------
 //This is when you change the resolution of your monitor while your ghost is running. Don't mess with any of this, it should be fine as is.
 
OnDisplayChange
 {
	displaybpp    = reference0
 	displaywidth  = reference1
	displayheight = reference2
 }



 //---- OnScreenSaverStart -------------------------------------------------------
 //This happens if your ghost is running when your screensaver starts up. I've never got this to trigger but I love this idea, and I feel like there's a way to do it I haven't figured out yet. So you can skip these for now if you want, but if I do ever get it working, I'll come back and make a note of it.
 
OnScreenSaverStart
 {
	"\0\s[0]\i[254]The screensaver is starting?!\w4 What's that???\w7\1\n\n[half]\s[10]\i[253]\i[406]Some primitive tech feature...?\e"
 }

 //---- OnScreenSaverEnd -------------------------------------------------------
 //When you wiggle your mouse and stop your screensaver.
 
OnScreenSaverEnd
 {
	"\0\s[0]\i[254]The screensaver is gone?!\w4 That was weird!\e"
 }

 //---- OnApplicationBoot ---------------------------------------------------------------
 //This supposedly is for when a program starts but I have honestly never gotten it to work or seen it happen. I wouldn't sweat these three related functions too much.
 
OnApplicationBoot
 {
	"\0\s[0]\i[252]\i[203]%(reference0) booted!\e"
 }

 //---- OnApplicationClose --------------------------------------------------------------
 //See above, but for the program closing.
 
OnApplicationClose
 {
	"\0\s[0]\i[201]%(reference0) closed.\e"
 }

 //---- OnApplicationFileOpen ----------------------------------------------------------
 //I believe this is for when the program detailed above opens a document file of some kind.
 
OnApplicationFileOpen
 {
	"\0\s[0]\i[203]Opening %(reference1).\e"
 }




 //---- OnBatteryLow -----------------------------------------------------------------
 //This is for when your laptop's battery is low. I don't have a laptop, so I've never really been able to test this. Perhaps someone with a laptop can report back to me with more details about the battery related functions?
 
OnBatteryLow
 {
	"\1\s[10]\i[204]Ah, %(username), it appears your laptop's battery is low. \w8\0\n\n[half]\s[0]\i[212]Umm, there's %(reference0) power left.\e"
	//reference0 here is the amount of battery power. Replace as you like.
 }
 
 //--OnBatteryCritical-----------------------------------------------------------------
 //Likewise, this is for if your battery is REALLY low. Replace as you like.
 
OnBatteryCritical
{
	"\0\s[0]\i[204]\i[252]Oh!!! You better plug in your laptop, %(username)!\e"
}
 
OnShellScaling
{
	if reference0 >= 150 //this number is the percentage that you're scaling the ghost up to. In this case, it's 150%.
	{
		"\0\s[0]\i[203]We're now 150% our original size!\w8\1\s[10]\f[italic,true]*sigh*\f[italic,false]\w4\i[201] I don't care for closeups.\e"
	}
	elseif reference0 == 100 //this is 100%
	{
		"\1\s[10]We are normal sized.\e"
	}
	elseif reference0 == 50 //this is 50%. You can add any percentage that's listed under shell scaling if you want using more elseifs.
	{
		"\0\s[0]\i[252]We're now 50% our original size!\i[154]\w8\1\s[10]I feel more distant.\e"
	}
}




//--Minigames-----------------------------------------------------------------------------

//--Higher or Lower--------------------------------

Select.holgame{

    //initialize deck of cards
    //single card: disp value, actual value for hol, suit icon, color
    deck = ("A,50,♠,gray","2,2,♠,gray","3,3,♠,gray","4,4,♠,gray","5,5,♠,gray","6,6,♠,gray","7,7,♠,gray","8,8,♠,gray","9,9,♠,gray","10,10,♠,gray","J,11,♠,gray","Q,12,♠,gray","K,13,♠,gray",/
            "A,50,♥,red","2,2,♥,red","3,3,♥,red","4,4,♥,red","5,5,♥,red","6,6,♥,red","7,7,♥,red","8,8,♥,red","9,9,♥,red","10,10,♥,red","J,11,♥,red","Q,12,♥,red","K,13,♥,red",/
            "A,50,♣,gray","2,2,♣,gray","3,3,♣,gray","4,4,♣,gray","5,5,♣,gray","6,6,♣,gray","7,7,♣,gray","8,8,♣,gray","9,9,♣,gray","10,10,♣,gray","J,11,♣,gray","Q,12,♣,gray","K,13,♣,gray",/
            "A,50,♦,red","2,2,♦,red","3,3,♦,red","4,4,♦,red","5,5,♦,red","6,6,♦,red","7,7,♦,red","8,8,♦,red","9,9,♦,red","10,10,♦,red","J,11,♦,red","Q,12,♦,red","K,13,♦,red",);
            
    card = ""
    
    HOLGuesses = 0 //correct guesses
    OnPlayHOL

}

OnPlayHOL {

    if reference0 == "rules" {
        if feelings <= 0
		{
		"\0\s[0]\i[253]\i[208]...I'll show you a card, and you guess if the next card in the deck is higher or lower. \n\n[half]Aces are highest, and two's are lowest. \n\n[half]Can you get your mean little hu-mon brain around that concept? <3\i[203]\i[158]\w8\x"
		}
		else
		{
		"\0\s[0]Okay! I'll show you a card, and you guess if the next card in the deck is higher or lower. \n\n[half]Aces are highest, and two's are lowest! \n\n[half]We have a kids' game kinda like this back home! It teaches risk assesment. Remember:\w4 Never mistake luck for wisdom! <3\i[203]\i[158]\w8\x"}
    } else {
        //pick a random card, keep old card for comparison
        oldcard = card
        _rand = RAND(ARRAYSIZE(deck)-1)
        card = deck[_rand]
        //remove card from deck
        deck[_rand] = IARRAY
    }
    --
    if ARRAYSIZE(deck) == 0 {//if user gets through the whole deck
        HOLComplete
    }

    if reference0 == "higher"{
    
        //new card lower than old card
        if TOINT(oldcard[1]) > TOINT(card[1])  {
			
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]Ooh...\n\w4%(newcarddisp) is lower than %(oldcarddisp).\w8\i[254]\i[410]\i[405] Damn. You should totally give up.\w8\n\n"
			}
			else
			{
            "\s[0]Ooh...\n\w4%(newcarddisp) is lower than %(oldcarddisp).\w8\i[254]\i[410]\i[405] Guess you lose!\w8\n\n"}
            
            --
            "\_q\![*]\q[Play again?,holgame] or...\n\n[half]"
            --
            "\0\s[0]Back to...\n\n[half]"
            --
            "\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            
        
        } elseif TOINT(oldcard[1]) < TOINT(card[1]) { //new card higher than old card
        
            //increase winnings
            
            HOLGuesses++
			
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]Yay.\w8 %(newcarddisp) is higher than %(oldcarddisp) .\w8 How long will your luck hold out...?\w5\i[410]\i[403] Not long\w4, I hope...\x"
			}
			else
			{
            "\s[0]\i[252]\i[406]\i[403]Yay!\w8 %(newcarddisp) is higher than %(oldcarddisp) !\w8 How long will your luck hold out...?\i[158]\x"}
            
            --
            
            "\s[0]Top Card: %(newcarddisp)\n\n"
            
            --
            
            "\_qDo you think the next card is:\n/
            \![*]\q[Higher?,OnPlayHOL,higher]\n/
            \![*]\q[Lower?,OnPlayHOL,lower]\n\n[half]"
            
            --
            
            "\![*]\q[View rules,OnPlayHOL,rules]\n/
            \![*]\q[Stop,HOLOver]\e"
    
        } else { //same value
        
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]Oh, \w8%(newcarddisp) has the same value as %(oldcarddisp).\w8 It's a draw.\x"
			}
			else
			{
            "\s[0]\i[404]\i[405]Haha, \w8%(newcarddisp) has the same value as %(oldcarddisp).\w8 It's no fun to end on a draw.\i[41]\x"}
            
            --
            
            "\s[0]Top Card: %(newcarddisp)\n\n"
            
            --
            
            "\_qDo you think the next card is:\n/
            \![*]\q[Higher?,OnPlayHOL,higher]\n/
            \![*]\q[Lower?,OnPlayHOL,lower]\n\n[half]"
            
            --
            
            "\![*]\q[View rules,OnPlayHOL,rules]\n/
            \![*]\q[Stop,HOLOver]\e"
        
        }
    
    } elseif reference0 == "lower" {
    
            //new card higher than old card
        if TOINT(oldcard[1]) < TOINT(card[1])  {
        
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]Aw,\n\w4%(newcarddisp) is higher than %(oldcarddisp).\w8 Bad luck, %(username). Hope it follow you.\i[155]\w8\n\n"
			}
			else
			{
            "\s[0]\i[253]\i[406]\i[407]Aww...\n\w4%(newcarddisp) is higher than %(oldcarddisp).\w8 Bad luck, %(username).\i[155]\w8\n\n"}
            
            --
            "\_q\![*]\q[Play again?,holgame] or...\n\n[half]"
            --
            "\0\s[0]Back to...\n\n[half]"
            --
            "\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            
        
        } elseif TOINT(oldcard[1]) > TOINT(card[1]) { //new card lower than old card
        
            //increase winnings
            
            HOLGuesses++
        
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]\i[410]\i[405]Hooray.\w8 %(newcarddisp) is lower than %(oldcarddisp) .\w8\i[406]\i[407] Keep it up.\w4 Or\w4 don't.\x"
			}
			else
			{
            "\s[0]\i[252]\i[203]\i[410]\i[405]Nice!\w8 %(newcarddisp) is lower than %(oldcarddisp) !\w8\i[406]\i[407]\i[204] Keep it up!\i[158]\x"}
            
            --
            
            "\s[0]Top Card: %(newcarddisp)\n\n"
            
            --
            
            "\_qDo you think the next card is:\n/
            \![*]\q[Higher?,OnPlayHOL,higher]\n/
            \![*]\q[Lower?,OnPlayHOL,lower]\n\n[half]"
            
            --
            
            "\![*]\q[View rules,OnPlayHOL,rules]\n/
            \![*]\q[Stop,HOLOver]\e"
    
        } else { //same value
        
			if feelings <= 0
			{
			"\s[0]\i[253]\i[208]\i[410]\i[403]Oh. \w8%(newcarddisp) has the same value as %(oldcarddisp).\w8 Must be a sign to, like\w4, quit,\w4 or,\w4 like,\w4 die.\i[155]\x"
			}
			else
			{
            "\s[0]\i[410]\i[403]Oh? \w8%(newcarddisp) has the same value as %(oldcarddisp).\w8 We should try again...!\i[155]\x"}
            
            --
            
            "\s[0]Top Card: %(newcarddisp)\n\n"
            
            --
            
            "\_qDo you think the next card is:\n/
            \![*]\q[Higher?,OnPlayHOL,higher]\n/
            \![*]\q[Lower?,OnPlayHOL,lower]\n\n[half]"
            
            --
            
            "\![*]\q[View rules,OnPlayHOL,rules]\n/
            \![*]\q[Stop,HOLOver]\e"
        
        }
    
    
    } else {
        
        "\s[0]\0Top Card: %(newcarddisp)\n\n"
        
        --
        
        "\_qDo you think the next card is:\n/
        \![*]\q[Higher?,OnPlayHOL,higher]\n/
        \![*]\q[Lower?,OnPlayHOL,lower]\n\n[half]/
        \![*]\q[View rules,OnPlayHOL,rules]\e"
        
    }


}

Select.HOLOver {

   
    if feelings <= 0
	{
	"\s[0]\i[253]\i[208]Your guessing streak was %(HOLGuesses).\w4\i[406]\i[403] Amaaaaazing, hu-mon.\w4 Really.\w8\n\n[half]\i[254] Are you gonna be a total pill\w3 and try again?\n\n"
	}
	else
	{
    "\0\s[0]\i[252]Your guessing streak was %(HOLGuesses)!\w4\i[406]\i[403] No risk, no reward!\w8\n\n[half] Want to try again?\i[158]\n\n"}
    
    --

    "\![*]\q[Sure,holgame]\n\n[half]"

    --
    "No thanks, back to...\n\n[half]"
    --
    "\![*]\q[Main menu,OnBACKTOMENU]\e"

}

HOLComplete {

	 if feelings <= 0
	{
	"\s[0]\i[208]\i[254]You guessed right all the way through the\w4 entire deck.\w8 Are you some kind of card-counting freak of nature, %(username)!\i[410]\i[405]\w8\n\n[half] Maybe you'll get caught cheating in a casino someday and get murked by some gangsters.\i[208]\i[160] <3\w8\n\n"
	}
	else
	{
    "\0\s[0]\i[254]Holy. Exchequer.\w8\i[252]\i[406]\i[407] You guessed right all the way through the entire deck!\w8 That's so lucky, %(username)!\i[410]\i[405]\w8\n\n[half] Let's clear out a casino ship someday, okay?!\i[203]\i[160] <3\w8\n\n"}
    --
    "\_q\![*]\q[Play again?,holgame] or...\n\n[half]"
    
    --
    "\0\s[0]Back to...\n\n[half]"
    --
    "\![*]\q[Main menu,OnBACKTOMENU]\e"

}



//----------------------------------Tic Tac Toe------------------
Select.tttgame{
    
    OnPlayOX

}


//OX游戏，by Pygmalion, loosely translated by Zar
//edited some by vita to have the AI make mistakes
//-------------------------------------------

OnPlayOX
{
    //intializing a tictactoe array with all 0's
    arrOX = IARRAY
    for _i = 0; _i < 9; _i++ {
        arrOX = (arrOX, 0)
    }
	if feelings <= 0
	{
	"\0\s[0]\i[253]\i[208]\w4...\w4Seriously?\c"
	"\0\s[0]\i[253]\i[208]Xs and Os...\w4...\w4Suuuuuure...\c"
	--
    PlayOXshow(0)
	}
	else
	{
    "\0\s[0]Naughts and crosses?\w4\i[252] I know that one!\w9\w9\c"
    "\0\s[0]Xs and Os, huh?\w4 Okay!\i[158]\w9\w9\c"
    "\0\s[0]Tic-tac-toe, huh.\w4\i[254] Who were those guys, anyway?\w9\w9\c"
    "\0\s[0]\i[406]\i[403]Tic-tac-toe,\w4\i[203] start!\w9\w9\c"
    --
    PlayOXshow(0)
	}
}

PlayOXshow
{

    //this function prints out the tictactoe array
    _tempstr = ""
    
    
    for _i = 0; _i < 3; _i++ {
        
        for _j = 0; _j < 3; _j++ {
            
            _temp = _i * 3 + _j
            
            
            if arrOX[_temp] == -1
                _tempstr = _tempstr + "X"
            elseif arrOX[_temp] == 1
                _tempstr = _tempstr + "O"
            elseif _argv[0] == 0
                _tempstr = _tempstr + "\q[　,PlayOXrun("+_temp+")]"
            else
                _tempstr = _tempstr + "　"
            if _j != 2
                _tempstr = _tempstr + " | "
        }
        _tempstr = _tempstr + "\n[90]"
        if _i != 2
        {
            _tempstr = _tempstr + "------------"
        }
        _tempstr = _tempstr + "\n[90]"
    }
    //switching btwn what dialogue to give. -> is the game over or not?
    switch _argv[0]
    {
		if feelings <= 0
		{
		"\_q\0\s[0]\i[253]\i[208]\b[2]Pick a square, then, hu-mon...\n\n%(_tempstr)\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
		}
		else
		{
        "\_q\0\s[0]\b[2]Pick a square, %(username)!\i[158]\n\n%(_tempstr)\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
		}
        
        {
			if feelings <= 0
			{
			 "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_q\s[3]I lost...\w8 Are you done, %(username)?\w9\w9\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_qYou beat me, %(username).\w4 Satisfied?\w4 Wanna leave me alone now?\w8\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_qLike, you beat me at a game for little kids...\w4 Sooooo impressive, hu-mon.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
            else
			{
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_q\s[0]\i[253]\i[408]\i[409]\i[202]I lost...?\w8 \s[0]That was a practice round!\w9\w9\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_qAw, you beat me, %(username).\w4\s[0]\i[254]\i[410]\i[405] Good thing I didn't have money riding on this!\i[160]\w8\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[408]\i[409]\i[202]\b[2]\n%(_tempstr)\n[half]\_qLike, you beat me at a game for little kids...\w4\s[0] I'll totally get you next time, though!\i[41]\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
        }
        
        {
			if feelings <= 0
			{
			"\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_q\Guess it's, like, \w4a tie.\w4 Whatever.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_qOh, a tie. Almost like this is a solved game for toddlers.\w6 About where you're at mentally, right,\w4 hu-mon?\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_qUgh, a tie!\w4 You gonna be a pain about this\w3 and make me play another round?\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
			else
			{
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_q\Guess it's, like\w4, a tie. \w4Lame.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_qOh, a tie? Well, it's a pretty simple game, after all.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_qUgh, a tie!\w4 We could play again if you want?\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
        }
        
        {
			if feelings <= 0
			{
			"\_q\0\s[0]\i[254]\i[406]\i[407]\i[208]\b[2]\n%(_tempstr)\n[half]\_q\nYay. I won.\w4 Wanna try again?\w4 Please say no.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_q\nWow, %(username), I beat you at a game for little kids.\w4 ...Maybe that's something you should think about for a while.\w4 Like\w4, alone.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\i[253]\i[208]\b[2]\n%(_tempstr)\n[half]\_q\n...Can I go now?\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
            else
			{
            "\_q\0\s[0]\i[404]\i[405]\i[252]\i[203]\b[2]\n%(_tempstr)\n[half]\_q\nYay! I won!\w4\i[204] Wanna try again?\i[160]\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_q\nHahaha, %(username), I beat you at a game for little kids!\w4 ...Maybe that's not worth bragging about.\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
            
            "\_q\0\s[0]\b[2]\n%(_tempstr)\n[half]\_q\nYeah!\w4 No hu-mon game can defeat me!\n[150]\_q\![*]\q[Play Again,OnPlayOX]\n\n[half]Back to...\n\n[half]\n\![*]\q[Main menu,OnBACKTOMENU]\e"
			}
        }
    }
}

Select.PlayOXrun
{
    arrOX[_argv[0]] = -1
    

    if PlayOXover(_argv[0]) != 1
    {
        _tempid = -1
        _rightmax = -24
        _tempright = 0
        //loop through ox array
        for _i = 0; _i < 9; _i++ {
            //if it's a blank spot
            if arrOX[_i] == 0
            {
                //check if this would make a win for the AI
                arrOX[_i] = 1
                if PlayOXover(_i) == 1
                {
                    arrOX[_i] = 0
                    _tempid = _i
                    break
                }
                
                
                _rightmin = 24
                for _j = 0; _j < 9; _j++ {
                    if arrOX[_j] == 0
                    {
                        //anticipate the player's next move
                        arrOX[_j] = -1
                        _tempright = 0
                        _temparry = IARRAY
                        _temparry = (_temparry,arrOX[0] + arrOX[1] + arrOX[2]) //row 1
                        _temparry = (_temparry,arrOX[3] + arrOX[4] + arrOX[5]) //row 2
                        _temparry = (_temparry,arrOX[6] + arrOX[7] + arrOX[8]) //row 3
                        _temparry = (_temparry,arrOX[0] + arrOX[3] + arrOX[6]) //col 1
                        _temparry = (_temparry,arrOX[1] + arrOX[4] + arrOX[7]) //col 2
                        _temparry = (_temparry,arrOX[2] + arrOX[5] + arrOX[8]) //col 3
                        _temparry = (_temparry,arrOX[0] + arrOX[4] + arrOX[8]) //diag 1
                        _temparry = (_temparry,arrOX[2] + arrOX[4] + arrOX[6]) //diag 2
                        _oxnum = 0
                        foreach _temparry; _k {
                            _tempright += _k
                            if _k == -3
                                _oxnum = 24
                            if _k == -2
                                _oxnum++
                            if _k == 2
                                _oxnum--
                        }
                        if _oxnum > 1
                            _tempright = -24
                        if _tempright < _rightmin
                        {
                            _rightmin = _tempright
                        }
                        arrOX[_j] = 0
                    }
                }
                
                
                if _rightmin > _rightmax
                {
                    _rightmax = _rightmin
                    _tempid = _i
                }
                //change back
                arrOX[_i] = 0
            }
        }
        
        //determine if there are spaces left
        if (_tempid == -1) {
            //if so, semi-randomly pick a spot
            _tempid = OXMistakes()
        }
        
        
        //if tempid unchanged, its a tie
        if _tempid == -1 {
            PlayOXshow(2)
        }
        else
        {
            
            //make a move -> winning move for AI if found early on
            
            //tweak the chance as you feel like
            if RAND(100) < 15 {
                //function to determine random mistakes
                _tempid = OXMistakes()
                arrOX[_tempid] = 1
            } else {
                arrOX[_tempid] = 1
            }
            
            //if the move the AI made results in a win for the AI, show the win sentence for the AI, else continue
            if PlayOXover(_tempid) == 1
            {
                PlayOXshow(3)
            }
            else
            {
                PlayOXshow(0)
            }
        }
    }
    else //if the move the player made results in a win display player win dialogue
        PlayOXshow(1)
}

PlayOXover
{
    //function to determine if the tictactoe game is over (and one of the players have won)
    //argv is the square to check
    _nowrow = _argv[0] / 3
    _nowcolumn = _argv[0] % 3
    
    //first two check row and column for a completed line of x's or o's
    //last two check diagonals
    if arrOX[_nowrow*3] == arrOX[_nowrow*3+1] && arrOX[_nowrow*3+1] == arrOX[_nowrow*3+2] && arrOX[_nowrow*3] != 0 /
    || arrOX[_nowcolumn] == arrOX[3+_nowcolumn] && arrOX[3+_nowcolumn] == arrOX[6+_nowcolumn] && arrOX[_nowcolumn] != 0 /
    || arrOX[0] == arrOX[4] && arrOX[4] == arrOX[8] && arrOX[8] != 0 /
    || arrOX[2] == arrOX[4] && arrOX[4] == arrOX[6] && arrOX[6] != 0
    {
        1
    }
    else
        0
}

//first pass at adding in mistakes
OXMistakes {
    //randomly pick a spot, else pick the first open spot if the random spot picked is already filled
     _OXspot = RAND(9)
    if arrOX[_OXspot] == 0 {
        _OXspot
    } else {
        for _i = 0; _i < 9; _i++ {
            if arrOX[_i] == 0 {
                _i
            }
        }
        -1
    }
    
}
